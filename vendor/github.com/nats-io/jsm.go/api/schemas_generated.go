// auto generated 2021-01-29 11:18:13.742301 +0100 CET m=+12.885040992

package api

import (
	"encoding/base64"

	jsadvisory "github.com/nats-io/jsm.go/api/jetstream/advisory"
	jsmetric "github.com/nats-io/jsm.go/api/jetstream/metric"
	srvadvisory "github.com/nats-io/jsm.go/api/server/advisory"
	srvmetric "github.com/nats-io/jsm.go/api/server/metric"
)

var schemas map[string][]byte

var schemaTypes = map[string]func() interface{}{
	"io.nats.server.advisory.v1.client_connect":                func() interface{} { return &srvadvisory.ConnectEventMsgV1{} },
	"io.nats.server.advisory.v1.client_disconnect":             func() interface{} { return &srvadvisory.DisconnectEventMsgV1{} },
	"io.nats.server.advisory.v1.account_connections":           func() interface{} { return &srvadvisory.AccountConnectionsV1{} },
	"io.nats.server.metric.v1.service_latency":                 func() interface{} { return &srvmetric.ServiceLatencyV1{} },
	"io.nats.jetstream.advisory.v1.api_audit":                  func() interface{} { return &jsadvisory.JetStreamAPIAuditV1{} },
	"io.nats.jetstream.advisory.v1.max_deliver":                func() interface{} { return &jsadvisory.ConsumerDeliveryExceededAdvisoryV1{} },
	"io.nats.jetstream.advisory.v1.terminated":                 func() interface{} { return &jsadvisory.JSConsumerDeliveryTerminatedAdvisoryV1{} },
	"io.nats.jetstream.advisory.v1.stream_action":              func() interface{} { return &jsadvisory.JSStreamActionAdvisoryV1{} },
	"io.nats.jetstream.advisory.v1.consumer_action":            func() interface{} { return &jsadvisory.JSConsumerActionAdvisoryV1{} },
	"io.nats.jetstream.advisory.v1.snapshot_create":            func() interface{} { return &jsadvisory.JSSnapshotCreateAdvisoryV1{} },
	"io.nats.jetstream.advisory.v1.snapshot_complete":          func() interface{} { return &jsadvisory.JSSnapshotCompleteAdvisoryV1{} },
	"io.nats.jetstream.advisory.v1.restore_create":             func() interface{} { return &jsadvisory.JSRestoreCreateAdvisoryV1{} },
	"io.nats.jetstream.advisory.v1.restore_complete":           func() interface{} { return &jsadvisory.JSRestoreCompleteAdvisoryV1{} },
	"io.nats.jetstream.advisory.v1.stream_leader_elected":      func() interface{} { return &jsadvisory.JSStreamLeaderElectedV1{} },
	"io.nats.jetstream.advisory.v1.consumer_leader_elected":    func() interface{} { return &jsadvisory.JSConsumerLeaderElectedV1{} },
	"io.nats.jetstream.advisory.v1.stream_quorum_lost":         func() interface{} { return &jsadvisory.JSStreamQuorumLostV1{} },
	"io.nats.jetstream.advisory.v1.consumer_quorum_lost":       func() interface{} { return &jsadvisory.JSConsumerQuorumLostV1{} },
	"io.nats.jetstream.metric.v1.consumer_ack":                 func() interface{} { return &jsmetric.ConsumerAckMetricV1{} },
	"io.nats.jetstream.api.v1.consumer_configuration":          func() interface{} { return &ConsumerConfig{} },
	"io.nats.jetstream.api.v1.stream_configuration":            func() interface{} { return &StreamConfig{} },
	"io.nats.jetstream.api.v1.stream_template_configuration":   func() interface{} { return &StreamTemplateConfig{} },
	"io.nats.jetstream.api.v1.account_info_response":           func() interface{} { return &JSApiAccountInfoResponse{} },
	"io.nats.jetstream.api.v1.consumer_create_request":         func() interface{} { return &JSApiConsumerCreateRequest{} },
	"io.nats.jetstream.api.v1.consumer_create_response":        func() interface{} { return &JSApiConsumerCreateResponse{} },
	"io.nats.jetstream.api.v1.consumer_delete_response":        func() interface{} { return &JSApiConsumerDeleteResponse{} },
	"io.nats.jetstream.api.v1.consumer_info_response":          func() interface{} { return &JSApiConsumerInfoResponse{} },
	"io.nats.jetstream.api.v1.consumer_list_request":           func() interface{} { return &JSApiConsumerListRequest{} },
	"io.nats.jetstream.api.v1.consumer_list_response":          func() interface{} { return &JSApiConsumerListResponse{} },
	"io.nats.jetstream.api.v1.consumer_names_request":          func() interface{} { return &JSApiConsumerNamesRequest{} },
	"io.nats.jetstream.api.v1.consumer_names_response":         func() interface{} { return &JSApiConsumerNamesResponse{} },
	"io.nats.jetstream.api.v1.consumer_getnext_request":        func() interface{} { return &JSApiConsumerGetNextRequest{} },
	"io.nats.jetstream.api.v1.stream_create_request":           func() interface{} { return &JSApiStreamCreateRequest{} },
	"io.nats.jetstream.api.v1.stream_create_response":          func() interface{} { return &JSApiStreamCreateResponse{} },
	"io.nats.jetstream.api.v1.stream_delete_response":          func() interface{} { return &JSApiStreamDeleteResponse{} },
	"io.nats.jetstream.api.v1.stream_info_response":            func() interface{} { return &JSApiStreamInfoResponse{} },
	"io.nats.jetstream.api.v1.stream_list_request":             func() interface{} { return &JSApiStreamListRequest{} },
	"io.nats.jetstream.api.v1.stream_list_response":            func() interface{} { return &JSApiStreamListResponse{} },
	"io.nats.jetstream.api.v1.stream_msg_delete_response":      func() interface{} { return &JSApiMsgDeleteResponse{} },
	"io.nats.jetstream.api.v1.stream_msg_get_request":          func() interface{} { return &JSApiMsgGetRequest{} },
	"io.nats.jetstream.api.v1.stream_msg_get_response":         func() interface{} { return &JSApiMsgGetResponse{} },
	"io.nats.jetstream.api.v1.stream_names_request":            func() interface{} { return &JSApiStreamNamesRequest{} },
	"io.nats.jetstream.api.v1.stream_names_response":           func() interface{} { return &JSApiStreamNamesResponse{} },
	"io.nats.jetstream.api.v1.stream_purge_response":           func() interface{} { return &JSApiStreamPurgeResponse{} },
	"io.nats.jetstream.api.v1.stream_snapshot_response":        func() interface{} { return &JSApiStreamSnapshotResponse{} },
	"io.nats.jetstream.api.v1.stream_snapshot_request":         func() interface{} { return &JSApiStreamSnapshotRequest{} },
	"io.nats.jetstream.api.v1.stream_restore_response":         func() interface{} { return &JSApiStreamRestoreResponse{} },
	"io.nats.jetstream.api.v1.stream_template_create_request":  func() interface{} { return &JSApiStreamTemplateCreateRequest{} },
	"io.nats.jetstream.api.v1.stream_template_create_response": func() interface{} { return &JSApiStreamTemplateCreateResponse{} },
	"io.nats.jetstream.api.v1.stream_template_delete_response": func() interface{} { return &JSApiStreamTemplateDeleteResponse{} },
	"io.nats.jetstream.api.v1.stream_template_info_response":   func() interface{} { return &JSApiStreamTemplateInfoResponse{} },
	"io.nats.jetstream.api.v1.stream_template_names_response":  func() interface{} { return &JSApiStreamTemplateNamesResponse{} },
	"io.nats.jetstream.api.v1.stream_template_names_request":   func() interface{} { return &JSApiStreamTemplateNamesRequest{} },
	"io.nats.jetstream.api.v1.stream_update_response":          func() interface{} { return &JSApiStreamUpdateResponse{} },
	"io.nats.jetstream.api.v1.pub_ack_response":                func() interface{} { return &JSPubAckResponse{} },
	"io.nats.unknown_message":                                  func() interface{} { return &UnknownMessage{} },
}

// Validate performs a JSON Schema validation of the configuration
func (t ConsumerConfig) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_configuration
func (t ConsumerConfig) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_configuration"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t ConsumerConfig) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_configuration.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t ConsumerConfig) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t StreamConfig) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_configuration
func (t StreamConfig) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_configuration"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t StreamConfig) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_configuration.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t StreamConfig) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t StreamTemplateConfig) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_configuration
func (t StreamTemplateConfig) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_configuration"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t StreamTemplateConfig) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_configuration.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t StreamTemplateConfig) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiAccountInfoResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.account_info_response
func (t JSApiAccountInfoResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.account_info_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiAccountInfoResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/account_info_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiAccountInfoResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerCreateRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_create_request
func (t JSApiConsumerCreateRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_create_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerCreateRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_create_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerCreateRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerCreateResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_create_response
func (t JSApiConsumerCreateResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_create_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerCreateResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_create_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerCreateResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerDeleteResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_delete_response
func (t JSApiConsumerDeleteResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_delete_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerDeleteResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_delete_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerDeleteResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerInfoResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_info_response
func (t JSApiConsumerInfoResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_info_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerInfoResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_info_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerInfoResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerListRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_list_request
func (t JSApiConsumerListRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_list_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerListRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_list_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerListRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerListResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_list_response
func (t JSApiConsumerListResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_list_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerListResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_list_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerListResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerNamesRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_names_request
func (t JSApiConsumerNamesRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_names_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerNamesRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_names_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerNamesRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerNamesResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_names_response
func (t JSApiConsumerNamesResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_names_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerNamesResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_names_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerNamesResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiConsumerGetNextRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.consumer_getnext_request
func (t JSApiConsumerGetNextRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.consumer_getnext_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiConsumerGetNextRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/consumer_getnext_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiConsumerGetNextRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamCreateRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_create_request
func (t JSApiStreamCreateRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_create_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamCreateRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_create_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamCreateRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamCreateResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_create_response
func (t JSApiStreamCreateResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_create_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamCreateResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_create_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamCreateResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamDeleteResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_delete_response
func (t JSApiStreamDeleteResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_delete_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamDeleteResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_delete_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamDeleteResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamInfoResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_info_response
func (t JSApiStreamInfoResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_info_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamInfoResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_info_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamInfoResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamListRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_list_request
func (t JSApiStreamListRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_list_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamListRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_list_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamListRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamListResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_list_response
func (t JSApiStreamListResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_list_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamListResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_list_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamListResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiMsgDeleteResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_msg_delete_response
func (t JSApiMsgDeleteResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_msg_delete_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiMsgDeleteResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_msg_delete_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiMsgDeleteResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiMsgGetRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_msg_get_request
func (t JSApiMsgGetRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_msg_get_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiMsgGetRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_msg_get_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiMsgGetRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiMsgGetResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_msg_get_response
func (t JSApiMsgGetResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_msg_get_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiMsgGetResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_msg_get_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiMsgGetResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamNamesRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_names_request
func (t JSApiStreamNamesRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_names_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamNamesRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_names_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamNamesRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamNamesResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_names_response
func (t JSApiStreamNamesResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_names_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamNamesResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_names_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamNamesResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamPurgeResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_purge_response
func (t JSApiStreamPurgeResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_purge_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamPurgeResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_purge_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamPurgeResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamSnapshotResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_snapshot_response
func (t JSApiStreamSnapshotResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_snapshot_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamSnapshotResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_snapshot_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamSnapshotResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamSnapshotRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_snapshot_request
func (t JSApiStreamSnapshotRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_snapshot_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamSnapshotRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_snapshot_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamSnapshotRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamRestoreResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_restore_response
func (t JSApiStreamRestoreResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_restore_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamRestoreResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_restore_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamRestoreResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateCreateRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_create_request
func (t JSApiStreamTemplateCreateRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_create_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateCreateRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_create_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateCreateRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateCreateResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_create_response
func (t JSApiStreamTemplateCreateResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_create_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateCreateResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_create_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateCreateResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateDeleteResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_delete_response
func (t JSApiStreamTemplateDeleteResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_delete_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateDeleteResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_delete_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateDeleteResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateInfoResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_info_response
func (t JSApiStreamTemplateInfoResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_info_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateInfoResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_info_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateInfoResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateNamesResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_names_response
func (t JSApiStreamTemplateNamesResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_names_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateNamesResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_names_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateNamesResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamTemplateNamesRequest) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_template_names_request
func (t JSApiStreamTemplateNamesRequest) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_template_names_request"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamTemplateNamesRequest) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_template_names_request.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamTemplateNamesRequest) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSApiStreamUpdateResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.stream_update_response
func (t JSApiStreamUpdateResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.stream_update_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSApiStreamUpdateResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/stream_update_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSApiStreamUpdateResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

// Validate performs a JSON Schema validation of the configuration
func (t JSPubAckResponse) Validate(v ...StructValidator) (valid bool, errors []string) {
	if len(v) == 0 || v[0] == nil {
		return true, nil
	}

	return v[0].ValidateStruct(t, t.SchemaType())
}

// SchemaType is the NATS schema type io.nats.jetstream.api.v1.pub_ack_response
func (t JSPubAckResponse) SchemaType() string {
	return "io.nats.jetstream.api.v1.pub_ack_response"
}

// SchemaID is the url to the JSON Schema for JetStream Consumer Configuration
func (t JSPubAckResponse) SchemaID() string {
	return "https://raw.githubusercontent.com/nats-io/jetstream/master/schemas/jetstream/api/v1/pub_ack_response.json"
}

// Schema is a JSON Schema document for the JetStream Consumer Configuration
func (t JSPubAckResponse) Schema() []byte {
	return schemas[t.SchemaType()]
}

func init() {
	schemas = make(map[string][]byte)
	schemas["io.nats.server.advisory.v1.client_connect"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9zZXJ2ZXIvYWR2aXNvcnkvdjEvY2xpZW50X2Nvbm5lY3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFkdmlzb3J5IHB1Ymxpc2hlZCBhIGNsaWVudCBjb25uZWN0cyB0byB0aGUgTkFUUyBTZXJ2ZXIiLAogICJ0aXRsZSI6ICJpby5uYXRzLnNlcnZlci5hZHZpc29yeS52MS5jbGllbnRfY29ubmVjdCIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic2VydmVyIiwKICAgICJjbGllbnQiCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5zZXJ2ZXIuYWR2aXNvcnkudjEuY2xpZW50X2Nvbm5lY3QiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInNlcnZlciI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJEZXRhaWxzIGFib3V0IHRoZSBzZXJ2ZXIgdGhlIGNsaWVudCBjb25uZWN0ZWQgdG8iLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgIm5hbWUiLAogICAgICAgICJob3N0IiwKICAgICAgICAiaWQiLAogICAgICAgICJ2ZXIiLAogICAgICAgICJzZXEiLAogICAgICAgICJqZXRzdHJlYW0iLAogICAgICAgICJ0aW1lIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNvbmZpZ3VyZWQgbmFtZSBmb3IgdGhlIHNlcnZlciwgbWF0Y2hlcyBJRCB3aGVuIHVuY29uZmlndXJlZCIsCiAgICAgICAgICAibWluTGVuZ3RoIjogMQogICAgICAgIH0sCiAgICAgICAgImhvc3QiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBob3N0IHRoaXMgc2VydmVyIHJ1bnMgb24sIHR5cGljYWxseSBhIElQIGFkZHJlc3MiCiAgICAgICAgfSwKICAgICAgICAiaWQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1bmlxdWUgc2VydmVyIElEIGZvciB0aGlzIG5vZGUiCiAgICAgICAgfSwKICAgICAgICAiY2x1c3RlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNsdXN0ZXIgdGhlIHNlcnZlciBiZWxvbmdzIHRvIgogICAgICAgIH0sCiAgICAgICAgInZlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gTkFUUyBydW5uaW5nIG9uIHRoZSBzZXJ2ZXIiCiAgICAgICAgfSwKICAgICAgICAic2VxIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW50ZXJuYWwgc2VydmVyIHNlcXVlbmNlIElEIgogICAgICAgIH0sCiAgICAgICAgImpldHN0cmVhbSI6IHsKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkluZGljYXRlcyBpZiB0aGlzIHNlcnZlciBoYXMgSmV0U3RyZWFtIGVuYWJsZWQiCiAgICAgICAgfSwKICAgICAgICAidGltZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGxvY2FsIHRpbWUgb2YgdGhlIHNlcnZlciIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiY2xpZW50IjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgImRlc2NyaXB0aW9uIjogIkRldGFpbHMgYWJvdXQgdGhlIGNsaWVudCB0aGF0IGNvbm5lY3RlZCB0byB0aGUgc2VydmVyIiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJhY2MiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzdGFydCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGltZXN0YW1wIHdoZW4gdGhlIGNsaWVudCBjb25uZWN0ZWQiCiAgICAgICAgfSwKICAgICAgICAic3RvcCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGltZXN0YW1wIHdoZW4gdGhlIGNsaWVudCBkaXNjb25uZWN0ZWQiCiAgICAgICAgfSwKICAgICAgICAiaG9zdCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHJlbW90ZSBob3N0IHRoZSBjbGllbnQgaXMgY29ubmVjdGVkIGZyb20iCiAgICAgICAgfSwKICAgICAgICAiaWQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBpbnRlcm5hbGx5IGFzc2lnbmVkIGNsaWVudCBJRCBmb3IgdGhpcyBjb25uZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgImFjYyI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGFjY291bnQgdGhpcyB1c2VyIGxvZ2dlZCBpbiB0byIKICAgICAgICB9LAogICAgICAgICJ1c2VyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY2xpZW50cyB1c2VybmFtZSIKICAgICAgICB9LAogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBwcmVzZW50ZWQgYnkgdGhlIGNsaWVudCBkdXJpbmcgY29ubmVjdGlvbiIKICAgICAgICB9LAogICAgICAgICJsYW5nIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgbGlicmFyeSBpbiB1c2UgYnkgdGhlIGNsaWVudCIKICAgICAgICB9LAogICAgICAgICJ2ZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB2ZXJzaW9uIG9mIHRoZSBjbGllbnQgbGlicmFyeSBpbiB1c2UiCiAgICAgICAgfSwKICAgICAgICAicnR0IjogewogICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbGFzdCBrbm93biBsYXRlbmN5IGJldHdlZW4gdGhlIE5BVFMgU2VydmVyIGFuZCB0aGUgQ2xpZW50IGluIG5hbm9zZWNvbmRzIgogICAgICAgIH0sCiAgICAgICAgImp3dCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIEpXVCBwcmVzZW50ZWQgaW4gdGhlIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAiaXNzdWVyX2tleSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHB1YmxpYyBzaWduaW5nIGtleSBvciBhY2NvdW50IGlkZW50aXR5IGtleSB1c2VkIHRvIGlzc3VlIHRoZSB1c2VyIgogICAgICAgIH0sCiAgICAgICAgIm5hbWVfdGFnIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBleHRyYWN0ZWQgZnJvbSB0aGUgdXNlciBKV1QgY2xhaW0iCiAgICAgICAgfSwKICAgICAgICAidGFncyI6IHsKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgfSwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUYWdzIGV4dHJhY3RlZCBmcm9tIHRoZSBKV1QiCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.server.advisory.v1.client_disconnect"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9zZXJ2ZXIvYWR2aXNvcnkvdjEvY2xpZW50X2Rpc2Nvbm5lY3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFkdmlzb3J5IHB1Ymxpc2hlZCBhIGNsaWVudCBkaXNjb25uZWN0cyB0byB0aGUgTkFUUyBTZXJ2ZXIiLAogICJ0aXRsZSI6ICJpby5uYXRzLnNlcnZlci5hZHZpc29yeS52MS5jbGllbnRfZGlzY29ubmVjdCIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic2VydmVyIiwKICAgICJjbGllbnQiLAogICAgInNlbnQiLAogICAgInJlY2VpdmVkIiwKICAgICJyZWFzb24iCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5zZXJ2ZXIuYWR2aXNvcnkudjEuY2xpZW50X2Rpc2Nvbm5lY3QiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInNlcnZlciI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJEZXRhaWxzIGFib3V0IHRoZSBzZXJ2ZXIgdGhlIGNsaWVudCBjb25uZWN0ZWQgdG8iLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgIm5hbWUiLAogICAgICAgICJob3N0IiwKICAgICAgICAiaWQiLAogICAgICAgICJ2ZXIiLAogICAgICAgICJzZXEiLAogICAgICAgICJqZXRzdHJlYW0iLAogICAgICAgICJ0aW1lIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNvbmZpZ3VyZWQgbmFtZSBmb3IgdGhlIHNlcnZlciwgbWF0Y2hlcyBJRCB3aGVuIHVuY29uZmlndXJlZCIsCiAgICAgICAgICAibWluTGVuZ3RoIjogMQogICAgICAgIH0sCiAgICAgICAgImhvc3QiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBob3N0IHRoaXMgc2VydmVyIHJ1bnMgb24sIHR5cGljYWxseSBhIElQIGFkZHJlc3MiCiAgICAgICAgfSwKICAgICAgICAiaWQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB1bmlxdWUgc2VydmVyIElEIGZvciB0aGlzIG5vZGUiCiAgICAgICAgfSwKICAgICAgICAiY2x1c3RlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNsdXN0ZXIgdGhlIHNlcnZlciBiZWxvbmdzIHRvIgogICAgICAgIH0sCiAgICAgICAgInZlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gTkFUUyBydW5uaW5nIG9uIHRoZSBzZXJ2ZXIiCiAgICAgICAgfSwKICAgICAgICAic2VxIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSW50ZXJuYWwgc2VydmVyIHNlcXVlbmNlIElEIgogICAgICAgIH0sCiAgICAgICAgImpldHN0cmVhbSI6IHsKICAgICAgICAgICJ0eXBlIjogImJvb2xlYW4iLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkluZGljYXRlcyBpZiB0aGlzIHNlcnZlciBoYXMgSmV0U3RyZWFtIGVuYWJsZWQiCiAgICAgICAgfSwKICAgICAgICAidGltZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGxvY2FsIHRpbWUgb2YgdGhlIHNlcnZlciIKICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICAiY2xpZW50IjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgImRlc2NyaXB0aW9uIjogIkRldGFpbHMgYWJvdXQgdGhlIGNsaWVudCB0aGF0IGNvbm5lY3RlZCB0byB0aGUgc2VydmVyIiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJhY2MiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzdGFydCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGltZXN0YW1wIHdoZW4gdGhlIGNsaWVudCBjb25uZWN0ZWQiCiAgICAgICAgfSwKICAgICAgICAic3RvcCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGltZXN0YW1wIHdoZW4gdGhlIGNsaWVudCBkaXNjb25uZWN0ZWQiCiAgICAgICAgfSwKICAgICAgICAiaG9zdCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHJlbW90ZSBob3N0IHRoZSBjbGllbnQgaXMgY29ubmVjdGVkIGZyb20iCiAgICAgICAgfSwKICAgICAgICAiaWQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBpbnRlcm5hbGx5IGFzc2lnbmVkIGNsaWVudCBJRCBmb3IgdGhpcyBjb25uZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgImFjYyI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGFjY291bnQgdGhpcyB1c2VyIGxvZ2dlZCBpbiB0byIKICAgICAgICB9LAogICAgICAgICJ1c2VyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY2xpZW50cyB1c2VybmFtZSIKICAgICAgICB9LAogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBwcmVzZW50ZWQgYnkgdGhlIGNsaWVudCBkdXJpbmcgY29ubmVjdGlvbiIKICAgICAgICB9LAogICAgICAgICJsYW5nIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgbGlicmFyeSBpbiB1c2UgYnkgdGhlIGNsaWVudCIKICAgICAgICB9LAogICAgICAgICJ2ZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB2ZXJzaW9uIG9mIHRoZSBjbGllbnQgbGlicmFyeSBpbiB1c2UiCiAgICAgICAgfSwKICAgICAgICAicnR0IjogewogICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbGFzdCBrbm93biBsYXRlbmN5IGJldHdlZW4gdGhlIE5BVFMgU2VydmVyIGFuZCB0aGUgQ2xpZW50IGluIG5hbm9zZWNvbmRzIgogICAgICAgIH0sCiAgICAgICAgImp3dCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIEpXVCBwcmVzZW50ZWQgaW4gdGhlIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAiaXNzdWVyX2tleSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHB1YmxpYyBzaWduaW5nIGtleSBvciBhY2NvdW50IGlkZW50aXR5IGtleSB1c2VkIHRvIGlzc3VlIHRoZSB1c2VyIgogICAgICAgIH0sCiAgICAgICAgIm5hbWVfdGFnIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBleHRyYWN0ZWQgZnJvbSB0aGUgdXNlciBKV1QgY2xhaW0iCiAgICAgICAgfSwKICAgICAgICAidGFncyI6IHsKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgfSwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUYWdzIGV4dHJhY3RlZCBmcm9tIHRoZSBKV1QiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgInNlbnQiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJEYXRhIHNlbnQgdG8gdGhlIGNsaWVudCIsCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibXNncyI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBudW1iZXIgb2YgbWVzc2FnZXMgaGFuZGxlZCBieSB0aGUgY2xpZW50IgogICAgICAgIH0sCiAgICAgICAgImJ5dGVzIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBvZiBieXRlcyBoYW5kbGVkIGJ5IHRoZSBjbGllbnQiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgInJlY2VpdmVkIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiRGF0YSByZWNlaXZlZCBmcm9tIHRoZSBjbGllbnQiLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm1zZ3MiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbnVtYmVyIG9mIG1lc3NhZ2VzIGhhbmRsZWQgYnkgdGhlIGNsaWVudCIKICAgICAgICB9LAogICAgICAgICJieXRlcyI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBudW1iZXIgb2YgYnl0ZXMgaGFuZGxlZCBieSB0aGUgY2xpZW50IgogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgICJyZWFzb24iOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcmVhc29uIHRoZSBjbGllbnQgZGlzY29ubmVjdGVkIgogICAgfQogIH0KfQo=")
	schemas["io.nats.server.advisory.v1.account_connections"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9zZXJ2ZXIvYWR2aXNvcnkvdjEvYWNjb3VudF9jb25uZWN0aW9ucy5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiUmVndWxhciBhZHZpc29yeSBwdWJsaXNoZWQgd2l0aCBhY2NvdW50IHN0YXRlcyIsCiAgInRpdGxlIjogImlvLm5hdHMuc2VydmVyLmFkdmlzb3J5LnYxLmFjY291bnRfY29ubmVjdGlvbnMiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInR5cGUiLAogICAgImlkIiwKICAgICJ0aW1lc3RhbXAiLAogICAgInNlcnZlciIsCiAgICAiYWNjIiwKICAgICJjb25ucyIsCiAgICAibGVhZm5vZGVzIiwKICAgICJ0b3RhbF9jb25ucyIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLnNlcnZlci5hZHZpc29yeS52MS5hY2NvdW50X2Nvbm5lY3Rpb25zIgogICAgfSwKICAgICJpZCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlVuaXF1ZSBjb3JyZWxhdGlvbiBJRCBmb3IgdGhpcyBldmVudCIKICAgIH0sCiAgICAidGltZXN0YW1wIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB0aGlzIGV2ZW50IHdhcyBjcmVhdGVkIGluIFJGQzMzMzkgZm9ybWF0IgogICAgfSwKICAgICJzZXJ2ZXIiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAiZGVzY3JpcHRpb24iOiAiRGV0YWlscyBhYm91dCB0aGUgc2VydmVyIHRoZSBjbGllbnQgY29ubmVjdGVkIHRvIiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJuYW1lIiwKICAgICAgICAiaG9zdCIsCiAgICAgICAgImlkIiwKICAgICAgICAidmVyIiwKICAgICAgICAic2VxIiwKICAgICAgICAiamV0c3RyZWFtIiwKICAgICAgICAidGltZSIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjb25maWd1cmVkIG5hbWUgZm9yIHRoZSBzZXJ2ZXIsIG1hdGNoZXMgSUQgd2hlbiB1bmNvbmZpZ3VyZWQiLAogICAgICAgICAgIm1pbkxlbmd0aCI6IDEKICAgICAgICB9LAogICAgICAgICJob3N0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgaG9zdCB0aGlzIHNlcnZlciBydW5zIG9uLCB0eXBpY2FsbHkgYSBJUCBhZGRyZXNzIgogICAgICAgIH0sCiAgICAgICAgImlkIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdW5pcXVlIHNlcnZlciBJRCBmb3IgdGhpcyBub2RlIgogICAgICAgIH0sCiAgICAgICAgImNsdXN0ZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjbHVzdGVyIHRoZSBzZXJ2ZXIgYmVsb25ncyB0byIKICAgICAgICB9LAogICAgICAgICJ2ZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB2ZXJzaW9uIE5BVFMgcnVubmluZyBvbiB0aGUgc2VydmVyIgogICAgICAgIH0sCiAgICAgICAgInNlcSI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkludGVybmFsIHNlcnZlciBzZXF1ZW5jZSBJRCIKICAgICAgICB9LAogICAgICAgICJqZXRzdHJlYW0iOiB7CiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgaWYgdGhpcyBzZXJ2ZXIgaGFzIEpldFN0cmVhbSBlbmFibGVkIgogICAgICAgIH0sCiAgICAgICAgInRpbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsb2NhbCB0aW1lIG9mIHRoZSBzZXJ2ZXIiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgImFjYyI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBhY2NvdW50IHRoZSB1cGRhdGUgaXMgZm9yIgogICAgfSwKICAgICJjb25ucyI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbnVtYmVyIG9mIGFjdGl2ZSBjbGllbnQgY29ubmVjdGlvbnMgdG8gdGhlIHNlcnZlciIsCiAgICAgICJtaW5pbXVtIjogMAogICAgfSwKICAgICJsZWFmbm9kZXMiOiB7CiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBvZiBhY3RpdmUgbGVhZm5vZGUgY29ubmVjdGlvbnMgdG8gdGhlIHNlcnZlciIsCiAgICAgICJtaW5pbXVtIjogMAogICAgfSwKICAgICJ0b3RhbF9jb25ucyI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY29tYmluZWQgY2xpZW50IGFuZCBsZWFmbm9kZSBhY2NvdW50IGNvbm5lY3Rpb25zIiwKICAgICAgIm1pbmltdW0iOiAwCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.server.metric.v1.service_latency"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.advisory.v1.api_audit"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvYXBpX2F1ZGl0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBZHZpc29yeSBwdWJsaXNoZWQgd2hlbiB0aGUgSmV0U3RyZWFtIEFQSSBpcyBhY2Nlc3NlZCBhY3Jvc3MgdGhlIG5ldHdvcmsiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5hcGlfYXVkaXQiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInR5cGUiLAogICAgImlkIiwKICAgICJ0aW1lc3RhbXAiLAogICAgInNlcnZlciIsCiAgICAiY2xpZW50IiwKICAgICJzdWJqZWN0IiwKICAgICJyZXNwb25zZSIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5hcGlfYXVkaXQiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInNlcnZlciI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzZXJ2ZXIgdGhpcyBldmVudCBvcmlnaW5hdGVzIGZyb20sIGVpdGhlciBhIGdlbmVyYXRlZCBJRCBvciB0aGUgY29uZmlndXJlZCBuYW1lIiwKICAgICAgIm1pbkxlbmd0aCI6IDEKICAgIH0sCiAgICAic3ViamVjdCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzdWJqZWN0IHRoZSBhZG1pbiBBUEkgcmVxdWVzdCB3YXMgcmVjZWl2ZWQgb24iLAogICAgICAibWluTGVuZ3RoIjogMQogICAgfSwKICAgICJyZXNwb25zZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBmdWxsIHVucGFyc2VkIGJvZHkgb2YgdGhlIHJlc3BvbnNlIHNlbnQgdG8gdGhlIGNhbGxlciIKICAgIH0sCiAgICAicmVxdWVzdCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBmdWxsIHVucGFyc2VkIGJvZHkgb2YgdGhlIHJlcXVlc3QgcmVjZWl2ZWQgZnJvbSB0aGUgY2xpZW50IgogICAgfSwKICAgICJjbGllbnQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAiZGVzY3JpcHRpb24iOiAiRGV0YWlscyBhYm91dCB0aGUgY2xpZW50IHRoYXQgY29ubmVjdGVkIHRvIHRoZSBzZXJ2ZXIiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImFjYyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN0YXJ0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lc3RhbXAgd2hlbiB0aGUgY2xpZW50IGNvbm5lY3RlZCIKICAgICAgICB9LAogICAgICAgICJzdG9wIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lc3RhbXAgd2hlbiB0aGUgY2xpZW50IGRpc2Nvbm5lY3RlZCIKICAgICAgICB9LAogICAgICAgICJob3N0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcmVtb3RlIGhvc3QgdGhlIGNsaWVudCBpcyBjb25uZWN0ZWQgZnJvbSIKICAgICAgICB9LAogICAgICAgICJpZCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGludGVybmFsbHkgYXNzaWduZWQgY2xpZW50IElEIGZvciB0aGlzIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAiYWNjIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgYWNjb3VudCB0aGlzIHVzZXIgbG9nZ2VkIGluIHRvIgogICAgICAgIH0sCiAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjbGllbnRzIHVzZXJuYW1lIgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIHByZXNlbnRlZCBieSB0aGUgY2xpZW50IGR1cmluZyBjb25uZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgImxhbmciOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBwcm9ncmFtbWluZyBsYW5ndWFnZSBsaWJyYXJ5IGluIHVzZSBieSB0aGUgY2xpZW50IgogICAgICAgIH0sCiAgICAgICAgInZlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gb2YgdGhlIGNsaWVudCBsaWJyYXJ5IGluIHVzZSIKICAgICAgICB9LAogICAgICAgICJydHQiOiB7CiAgICAgICAgICAidHlwZSI6ICJudW1iZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsYXN0IGtub3duIGxhdGVuY3kgYmV0d2VlbiB0aGUgTkFUUyBTZXJ2ZXIgYW5kIHRoZSBDbGllbnQgaW4gbmFub3NlY29uZHMiCiAgICAgICAgfSwKICAgICAgICAiand0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgSldUIHByZXNlbnRlZCBpbiB0aGUgY29ubmVjdGlvbiIKICAgICAgICB9LAogICAgICAgICJpc3N1ZXJfa2V5IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcHVibGljIHNpZ25pbmcga2V5IG9yIGFjY291bnQgaWRlbnRpdHkga2V5IHVzZWQgdG8gaXNzdWUgdGhlIHVzZXIiCiAgICAgICAgfSwKICAgICAgICAibmFtZV90YWciOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIGV4dHJhY3RlZCBmcm9tIHRoZSB1c2VyIEpXVCBjbGFpbSIKICAgICAgICB9LAogICAgICAgICJ0YWdzIjogewogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICB9LAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRhZ3MgZXh0cmFjdGVkIGZyb20gdGhlIEpXVCIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.advisory.v1.max_deliver"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvbWF4X2RlbGl2ZXIuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFkdmlzb3J5IHB1Ymxpc2hlZCB3aGVuIGEgbWVzc2FnZSBoYXZlIHJlYWNoZWQgaXRzIG1heGltdW0gZGVsaXZlcnkgYXR0ZW1wdHMiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5tYXhfZGVsaXZlciIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic3RyZWFtIiwKICAgICJjb25zdW1lciIsCiAgICAic3RyZWFtX3NlcSIsCiAgICAiZGVsaXZlcmllcyIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5tYXhfZGVsaXZlciIKICAgIH0sCiAgICAiaWQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJVbmlxdWUgY29ycmVsYXRpb24gSUQgZm9yIHRoaXMgZXZlbnQiCiAgICB9LAogICAgInRpbWVzdGFtcCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhpcyBldmVudCB3YXMgY3JlYXRlZCBpbiBSRkMzMzM5IGZvcm1hdCIKICAgIH0sCiAgICAic3RyZWFtIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIHN0cmVhbSB3aGVyZSB0aGUgbWVzc2FnZSBpcyBzdG9yZWQiCiAgICB9LAogICAgImNvbnN1bWVyIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGNvbnN1bWVyIHdoZXJlIHRoZSBtZXNzYWdlIHJlYWNoZWQgaXRzIGxpbWl0IgogICAgfSwKICAgICJzdHJlYW1fc2VxIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAibWluaW11bSI6IDEsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2Ugb2YgdGhlIG1lc3NhZ2UgaW4gdGhlIHN0cmVhbSB0aGF0IGZhaWxlZCIKICAgIH0sCiAgICAiZGVsaXZlcmllcyI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMSwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBudW1iZXIgb2YgZGVsaXZlcmllcyB0aGF0IHdlcmUgYXR0ZW1wdGVkIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.advisory.v1.terminated"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvdGVybWluYXRlZC5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQWR2aXNvcnkgcHVibGlzaGVkIHdoZW4gYSBtZXNzYWdlIHdhcyB0ZXJtaW5hdGVkIHVzaW5nIGEgQWNrVGVybSBhY2tub3dsZWRnZW1lbnQiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS50ZXJtaW5hdGVkIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJyZXF1aXJlZCI6IFsKICAgICJ0eXBlIiwKICAgICJpZCIsCiAgICAidGltZXN0YW1wIiwKICAgICJzdHJlYW0iLAogICAgImNvbnN1bWVyIiwKICAgICJjb25zdW1lcl9zZXEiLAogICAgInN0cmVhbV9zZXEiLAogICAgImRlbGl2ZXJpZXMiCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEudGVybWluYXRlZCIKICAgIH0sCiAgICAiaWQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJVbmlxdWUgY29ycmVsYXRpb24gSUQgZm9yIHRoaXMgZXZlbnQiCiAgICB9LAogICAgInRpbWVzdGFtcCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhpcyBldmVudCB3YXMgY3JlYXRlZCBpbiBSRkMzMzM5IGZvcm1hdCIKICAgIH0sCiAgICAic3RyZWFtIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIHN0cmVhbSB3aGVyZSB0aGUgbWVzc2FnZSBpcyBzdG9yZWQiCiAgICB9LAogICAgImNvbnN1bWVyIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGNvbnN1bWVyIHdoZXJlIHRoZSBtZXNzYWdlIHdhcyB0ZXJtaW5hdGVkIgogICAgfSwKICAgICJzdHJlYW1fc2VxIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAibWluaW11bSI6IDEsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2Ugb2YgdGhlIG1lc3NhZ2UgaW4gdGhlIHN0cmVhbSB0aGF0IHdhcyB0ZXJtaW5hdGVkIgogICAgfSwKICAgICJjb25zdW1lcl9zZXEiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJtaW5pbXVtIjogMSwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzZXF1ZW5jZSBvZiB0aGUgbWVzc2FnZSBpbiB0aGUgY29uc3VtZXIgdGhhdCB3YXMgdGVybWluYXRlZCIKICAgIH0sCiAgICAiZGVsaXZlcmllcyI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMSwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBudW1iZXIgb2YgZGVsaXZlcmllcyB0aGF0IHdlcmUgYXR0ZW1wdGVkIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.advisory.v1.stream_action"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvc3RyZWFtX2FjdGlvbi5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQW4gQWR2aXNvcnkgc2VudCB3aGVuIGEgU3RyZWFtIGlzIGNyZWF0ZWQsIG1vZGlmaWVkIG9yIGRlbGV0ZWQiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5zdHJlYW1fYWN0aW9uIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJyZXF1aXJlZCI6IFsKICAgICJ0eXBlIiwKICAgICJpZCIsCiAgICAidGltZXN0YW1wIiwKICAgICJzdHJlYW0iLAogICAgImFjdGlvbiIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5zdHJlYW1fYWN0aW9uIgogICAgfSwKICAgICJpZCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlVuaXF1ZSBjb3JyZWxhdGlvbiBJRCBmb3IgdGhpcyBldmVudCIKICAgIH0sCiAgICAidGltZXN0YW1wIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB0aGlzIGV2ZW50IHdhcyBjcmVhdGVkIGluIFJGQzMzMzkgZm9ybWF0IgogICAgfSwKICAgICJhY3Rpb24iOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgYWN0aW9uIHRoYXQgdGhlIGV2ZW50IGRlc2NyaWJlcyIsCiAgICAgICJlbnVtIjogWwogICAgICAgICJjcmVhdGUiLAogICAgICAgICJkZWxldGUiLAogICAgICAgICJtb2RpZnkiCiAgICAgIF0KICAgIH0sCiAgICAic3RyZWFtIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIFN0cmVhbSB0aGF0J3MgYWN0ZWQgb24iCiAgICB9LAogICAgInRlbXBsYXRlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIFN0cmVhbSBUZW1wbGF0ZSB0aGF0IG1hbmFnZXMgdGhlIFN0cmVhbSIKICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.advisory.v1.consumer_action"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvY29uc3VtZXJfYWN0aW9uLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBbiBBZHZpc29yeSBzZW50IHdoZW4gYSBDb25zdW1lciBpcyBjcmVhdGVkIG9yIGRlbGV0ZWQiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5jb25zdW1lcl9hY3Rpb24iLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInR5cGUiLAogICAgImlkIiwKICAgICJ0aW1lc3RhbXAiLAogICAgInN0cmVhbSIsCiAgICAiYWN0aW9uIgogIF0sCiAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFkdmlzb3J5LnYxLmNvbnN1bWVyX2FjdGlvbiIKICAgIH0sCiAgICAiaWQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJVbmlxdWUgY29ycmVsYXRpb24gSUQgZm9yIHRoaXMgZXZlbnQiCiAgICB9LAogICAgInRpbWVzdGFtcCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhpcyBldmVudCB3YXMgY3JlYXRlZCBpbiBSRkMzMzM5IGZvcm1hdCIKICAgIH0sCiAgICAiYWN0aW9uIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGFjdGlvbiB0aGF0IHRoZSBldmVudCBkZXNjcmliZXMiLAogICAgICAiZW51bSI6IFsKICAgICAgICAiY3JlYXRlIiwKICAgICAgICAiZGVsZXRlIgogICAgICBdCiAgICB9LAogICAgInN0cmVhbSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBTdHJlYW0gdGhhdCB0aGUgQ29uc3VtZXIgYmVsb25ncyB0byIKICAgIH0sCiAgICAiY29uc3VtZXIiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgQ29uc3VtZXIgdGhhdCdzIGFjdGVkIG9uIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.advisory.v1.snapshot_create"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvc25hcHNob3RfY3JlYXRlLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBbiBBZHZpc29yeSBzZW50IHdoZW4gYSBTdHJlYW0gc25hcHNob3QgaXMgY3JlYXRlZCIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFkdmlzb3J5LnYxLnNuYXBzaG90X2NyZWF0ZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic3RyZWFtIiwKICAgICJibG9ja3MiLAogICAgImJsb2NrX3NpemUiLAogICAgImNsaWVudCIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5zbmFwc2hvdF9jcmVhdGUiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInN0cmVhbSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBTdHJlYW0gYmVpbmcgc25hcHNob3R0ZWQiCiAgICB9LAogICAgImJsb2NrcyI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJBcHByb3hpbWF0ZSBudW1iZXIgb2YgYmxvY2tzIGluIHRoZSBzbmFwc2hvdCIsCiAgICAgICJtaW5pbXVtIjogMAogICAgfSwKICAgICJibG9ja19zaXplIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzaXplLCBpbiBieXRlcywgb2YgZXZlcnkgYmxvY2siLAogICAgICAibWluaW11bSI6IDEKICAgIH0sCiAgICAiY2xpZW50IjogewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgImRlc2NyaXB0aW9uIjogIkRldGFpbHMgYWJvdXQgdGhlIGNsaWVudCB0aGF0IGNvbm5lY3RlZCB0byB0aGUgc2VydmVyIiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJhY2MiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzdGFydCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGltZXN0YW1wIHdoZW4gdGhlIGNsaWVudCBjb25uZWN0ZWQiCiAgICAgICAgfSwKICAgICAgICAic3RvcCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGltZXN0YW1wIHdoZW4gdGhlIGNsaWVudCBkaXNjb25uZWN0ZWQiCiAgICAgICAgfSwKICAgICAgICAiaG9zdCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHJlbW90ZSBob3N0IHRoZSBjbGllbnQgaXMgY29ubmVjdGVkIGZyb20iCiAgICAgICAgfSwKICAgICAgICAiaWQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBpbnRlcm5hbGx5IGFzc2lnbmVkIGNsaWVudCBJRCBmb3IgdGhpcyBjb25uZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgImFjYyI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGFjY291bnQgdGhpcyB1c2VyIGxvZ2dlZCBpbiB0byIKICAgICAgICB9LAogICAgICAgICJ1c2VyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgY2xpZW50cyB1c2VybmFtZSIKICAgICAgICB9LAogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBwcmVzZW50ZWQgYnkgdGhlIGNsaWVudCBkdXJpbmcgY29ubmVjdGlvbiIKICAgICAgICB9LAogICAgICAgICJsYW5nIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcHJvZ3JhbW1pbmcgbGFuZ3VhZ2UgbGlicmFyeSBpbiB1c2UgYnkgdGhlIGNsaWVudCIKICAgICAgICB9LAogICAgICAgICJ2ZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB2ZXJzaW9uIG9mIHRoZSBjbGllbnQgbGlicmFyeSBpbiB1c2UiCiAgICAgICAgfSwKICAgICAgICAicnR0IjogewogICAgICAgICAgInR5cGUiOiAibnVtYmVyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbGFzdCBrbm93biBsYXRlbmN5IGJldHdlZW4gdGhlIE5BVFMgU2VydmVyIGFuZCB0aGUgQ2xpZW50IGluIG5hbm9zZWNvbmRzIgogICAgICAgIH0sCiAgICAgICAgImp3dCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIEpXVCBwcmVzZW50ZWQgaW4gdGhlIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAiaXNzdWVyX2tleSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHB1YmxpYyBzaWduaW5nIGtleSBvciBhY2NvdW50IGlkZW50aXR5IGtleSB1c2VkIHRvIGlzc3VlIHRoZSB1c2VyIgogICAgICAgIH0sCiAgICAgICAgIm5hbWVfdGFnIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBleHRyYWN0ZWQgZnJvbSB0aGUgdXNlciBKV1QgY2xhaW0iCiAgICAgICAgfSwKICAgICAgICAidGFncyI6IHsKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgfSwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUYWdzIGV4dHJhY3RlZCBmcm9tIHRoZSBKV1QiCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.advisory.v1.snapshot_complete"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvc25hcHNob3RfY29tcGxldGUuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFuIEFkdmlzb3J5IHNlbnQgd2hlbiBhIFN0cmVhbSBzbmFwc2hvdCBpcyBjb21wbGV0ZWQiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5zbmFwc2hvdF9jb21wbGV0ZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic3RyZWFtIiwKICAgICJzdGFydCIsCiAgICAiZW5kIiwKICAgICJjbGllbnQiCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEuc25hcHNob3RfY29tcGxldGUiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInN0cmVhbSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBTdHJlYW0gdGhhdCBoYWQgdGhlIHNuYXBzaG90IgogICAgfSwKICAgICJzdGFydCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoZSBzbmFwc2hvdCB3YXMgY3JlYXRlZCIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgfSwKICAgICJlbmQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB0aGUgc25hcHNob3Qgd2FzIGNvbXBsZXRlZCIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgfSwKICAgICJjbGllbnQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAiZGVzY3JpcHRpb24iOiAiRGV0YWlscyBhYm91dCB0aGUgY2xpZW50IHRoYXQgY29ubmVjdGVkIHRvIHRoZSBzZXJ2ZXIiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImFjYyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN0YXJ0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lc3RhbXAgd2hlbiB0aGUgY2xpZW50IGNvbm5lY3RlZCIKICAgICAgICB9LAogICAgICAgICJzdG9wIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lc3RhbXAgd2hlbiB0aGUgY2xpZW50IGRpc2Nvbm5lY3RlZCIKICAgICAgICB9LAogICAgICAgICJob3N0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcmVtb3RlIGhvc3QgdGhlIGNsaWVudCBpcyBjb25uZWN0ZWQgZnJvbSIKICAgICAgICB9LAogICAgICAgICJpZCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGludGVybmFsbHkgYXNzaWduZWQgY2xpZW50IElEIGZvciB0aGlzIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAiYWNjIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgYWNjb3VudCB0aGlzIHVzZXIgbG9nZ2VkIGluIHRvIgogICAgICAgIH0sCiAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjbGllbnRzIHVzZXJuYW1lIgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIHByZXNlbnRlZCBieSB0aGUgY2xpZW50IGR1cmluZyBjb25uZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgImxhbmciOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBwcm9ncmFtbWluZyBsYW5ndWFnZSBsaWJyYXJ5IGluIHVzZSBieSB0aGUgY2xpZW50IgogICAgICAgIH0sCiAgICAgICAgInZlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gb2YgdGhlIGNsaWVudCBsaWJyYXJ5IGluIHVzZSIKICAgICAgICB9LAogICAgICAgICJydHQiOiB7CiAgICAgICAgICAidHlwZSI6ICJudW1iZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsYXN0IGtub3duIGxhdGVuY3kgYmV0d2VlbiB0aGUgTkFUUyBTZXJ2ZXIgYW5kIHRoZSBDbGllbnQgaW4gbmFub3NlY29uZHMiCiAgICAgICAgfSwKICAgICAgICAiand0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgSldUIHByZXNlbnRlZCBpbiB0aGUgY29ubmVjdGlvbiIKICAgICAgICB9LAogICAgICAgICJpc3N1ZXJfa2V5IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcHVibGljIHNpZ25pbmcga2V5IG9yIGFjY291bnQgaWRlbnRpdHkga2V5IHVzZWQgdG8gaXNzdWUgdGhlIHVzZXIiCiAgICAgICAgfSwKICAgICAgICAibmFtZV90YWciOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIGV4dHJhY3RlZCBmcm9tIHRoZSB1c2VyIEpXVCBjbGFpbSIKICAgICAgICB9LAogICAgICAgICJ0YWdzIjogewogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICB9LAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRhZ3MgZXh0cmFjdGVkIGZyb20gdGhlIEpXVCIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.advisory.v1.restore_create"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvcmVzdG9yZV9jcmVhdGUuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFuIEFkdmlzb3J5IHNlbnQgd2hlbiBhIFN0cmVhbSByZXN0b3JlIGlzIHN0YXJ0ZWQiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5yZXN0b3JlX2NyZWF0ZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic3RyZWFtIiwKICAgICJjbGllbnQiCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEucmVzdG9yZV9jcmVhdGUiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInN0cmVhbSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBTdHJlYW0gYmVpbmcgcmVzdG9yZWQiCiAgICB9LAogICAgImNsaWVudCI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJEZXRhaWxzIGFib3V0IHRoZSBjbGllbnQgdGhhdCBjb25uZWN0ZWQgdG8gdGhlIHNlcnZlciIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiYWNjIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAic3RhcnQiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRpbWVzdGFtcCB3aGVuIHRoZSBjbGllbnQgY29ubmVjdGVkIgogICAgICAgIH0sCiAgICAgICAgInN0b3AiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRpbWVzdGFtcCB3aGVuIHRoZSBjbGllbnQgZGlzY29ubmVjdGVkIgogICAgICAgIH0sCiAgICAgICAgImhvc3QiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSByZW1vdGUgaG9zdCB0aGUgY2xpZW50IGlzIGNvbm5lY3RlZCBmcm9tIgogICAgICAgIH0sCiAgICAgICAgImlkIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgaW50ZXJuYWxseSBhc3NpZ25lZCBjbGllbnQgSUQgZm9yIHRoaXMgY29ubmVjdGlvbiIKICAgICAgICB9LAogICAgICAgICJhY2MiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBhY2NvdW50IHRoaXMgdXNlciBsb2dnZWQgaW4gdG8iCiAgICAgICAgfSwKICAgICAgICAidXNlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGNsaWVudHMgdXNlcm5hbWUiCiAgICAgICAgfSwKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgcHJlc2VudGVkIGJ5IHRoZSBjbGllbnQgZHVyaW5nIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAibGFuZyI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHByb2dyYW1taW5nIGxhbmd1YWdlIGxpYnJhcnkgaW4gdXNlIGJ5IHRoZSBjbGllbnQiCiAgICAgICAgfSwKICAgICAgICAidmVyIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdmVyc2lvbiBvZiB0aGUgY2xpZW50IGxpYnJhcnkgaW4gdXNlIgogICAgICAgIH0sCiAgICAgICAgInJ0dCI6IHsKICAgICAgICAgICJ0eXBlIjogIm51bWJlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGxhc3Qga25vd24gbGF0ZW5jeSBiZXR3ZWVuIHRoZSBOQVRTIFNlcnZlciBhbmQgdGhlIENsaWVudCBpbiBuYW5vc2Vjb25kcyIKICAgICAgICB9LAogICAgICAgICJqd3QiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBKV1QgcHJlc2VudGVkIGluIHRoZSBjb25uZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgImlzc3Vlcl9rZXkiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBwdWJsaWMgc2lnbmluZyBrZXkgb3IgYWNjb3VudCBpZGVudGl0eSBrZXkgdXNlZCB0byBpc3N1ZSB0aGUgdXNlciIKICAgICAgICB9LAogICAgICAgICJuYW1lX3RhZyI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgZXh0cmFjdGVkIGZyb20gdGhlIHVzZXIgSldUIGNsYWltIgogICAgICAgIH0sCiAgICAgICAgInRhZ3MiOiB7CiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAiaXRlbXMiOiB7CiAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgIH0sCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGFncyBleHRyYWN0ZWQgZnJvbSB0aGUgSldUIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.advisory.v1.restore_complete"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvcmVzdG9yZV9jb21wbGV0ZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQW4gQWR2aXNvcnkgc2VudCB3aGVuIGEgU3RyZWFtIHJlc3RvcmUgaXMgY29tcGxldGVkIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEucmVzdG9yZV9jb21wbGV0ZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIsCiAgICAiaWQiLAogICAgInRpbWVzdGFtcCIsCiAgICAic3RyZWFtIiwKICAgICJzdGFydCIsCiAgICAiZW5kIiwKICAgICJieXRlcyIsCiAgICAiY2xpZW50IgogIF0sCiAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFkdmlzb3J5LnYxLnJlc3RvcmVfY29tcGxldGUiCiAgICB9LAogICAgImlkIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVW5pcXVlIGNvcnJlbGF0aW9uIElEIGZvciB0aGlzIGV2ZW50IgogICAgfSwKICAgICJ0aW1lc3RhbXAiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoaXMgZXZlbnQgd2FzIGNyZWF0ZWQgaW4gUkZDMzMzOSBmb3JtYXQiCiAgICB9LAogICAgInN0cmVhbSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBTdHJlYW0gYmVpbmcgcmVzdG9yZWQiCiAgICB9LAogICAgInN0YXJ0IjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhlIFJlc3RvcmUgcHJvY2VzcyBzdGFydGVkIiwKICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiCiAgICB9LAogICAgImVuZCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHRoZSBSZXN0b3JlIHdhcyBjb21wbGV0ZWQiLAogICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIKICAgIH0sCiAgICAiYnl0ZXMiOiB7CiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG51bWJlciBvZiBieXRlcyB0aGF0IHdhcyByZWNlaXZlZCIsCiAgICAgICJtaW5pbXVtIjogMAogICAgfSwKICAgICJjbGllbnQiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAiZGVzY3JpcHRpb24iOiAiRGV0YWlscyBhYm91dCB0aGUgY2xpZW50IHRoYXQgY29ubmVjdGVkIHRvIHRoZSBzZXJ2ZXIiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImFjYyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgInN0YXJ0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lc3RhbXAgd2hlbiB0aGUgY2xpZW50IGNvbm5lY3RlZCIKICAgICAgICB9LAogICAgICAgICJzdG9wIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaW1lc3RhbXAgd2hlbiB0aGUgY2xpZW50IGRpc2Nvbm5lY3RlZCIKICAgICAgICB9LAogICAgICAgICJob3N0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcmVtb3RlIGhvc3QgdGhlIGNsaWVudCBpcyBjb25uZWN0ZWQgZnJvbSIKICAgICAgICB9LAogICAgICAgICJpZCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGludGVybmFsbHkgYXNzaWduZWQgY2xpZW50IElEIGZvciB0aGlzIGNvbm5lY3Rpb24iCiAgICAgICAgfSwKICAgICAgICAiYWNjIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgYWNjb3VudCB0aGlzIHVzZXIgbG9nZ2VkIGluIHRvIgogICAgICAgIH0sCiAgICAgICAgInVzZXIiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjbGllbnRzIHVzZXJuYW1lIgogICAgICAgIH0sCiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIHByZXNlbnRlZCBieSB0aGUgY2xpZW50IGR1cmluZyBjb25uZWN0aW9uIgogICAgICAgIH0sCiAgICAgICAgImxhbmciOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBwcm9ncmFtbWluZyBsYW5ndWFnZSBsaWJyYXJ5IGluIHVzZSBieSB0aGUgY2xpZW50IgogICAgICAgIH0sCiAgICAgICAgInZlciI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHZlcnNpb24gb2YgdGhlIGNsaWVudCBsaWJyYXJ5IGluIHVzZSIKICAgICAgICB9LAogICAgICAgICJydHQiOiB7CiAgICAgICAgICAidHlwZSI6ICJudW1iZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsYXN0IGtub3duIGxhdGVuY3kgYmV0d2VlbiB0aGUgTkFUUyBTZXJ2ZXIgYW5kIHRoZSBDbGllbnQgaW4gbmFub3NlY29uZHMiCiAgICAgICAgfSwKICAgICAgICAiand0IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgSldUIHByZXNlbnRlZCBpbiB0aGUgY29ubmVjdGlvbiIKICAgICAgICB9LAogICAgICAgICJpc3N1ZXJfa2V5IjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcHVibGljIHNpZ25pbmcga2V5IG9yIGFjY291bnQgaWRlbnRpdHkga2V5IHVzZWQgdG8gaXNzdWUgdGhlIHVzZXIiCiAgICAgICAgfSwKICAgICAgICAibmFtZV90YWciOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIGV4dHJhY3RlZCBmcm9tIHRoZSB1c2VyIEpXVCBjbGFpbSIKICAgICAgICB9LAogICAgICAgICJ0YWdzIjogewogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICB9LAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRhZ3MgZXh0cmFjdGVkIGZyb20gdGhlIEpXVCIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.advisory.v1.stream_leader_elected"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvc3RyZWFtX2xlYWRlcl9lbGVjdGVkLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBbiBBZHZpc29yeSBzZW50IHdoZW4gYSBjbHVzdGVyZWQgU3RyZWFtIGVsZWN0ZWQgYSBuZXcgbGVhZGVyIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEuc3RyZWFtX2xlYWRlcl9lbGVjdGVkIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJyZXF1aXJlZCI6IFsKICAgICJ0eXBlIiwKICAgICJpZCIsCiAgICAidGltZXN0YW1wIiwKICAgICJzdHJlYW0iLAogICAgImxlYWRlciIsCiAgICAicmVwbGljYXMiCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEuc3RyZWFtX2xlYWRlcl9lbGVjdGVkIgogICAgfSwKICAgICJpZCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlVuaXF1ZSBjb3JyZWxhdGlvbiBJRCBmb3IgdGhpcyBldmVudCIKICAgIH0sCiAgICAidGltZXN0YW1wIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB0aGlzIGV2ZW50IHdhcyBjcmVhdGVkIGluIFJGQzMzMzkgZm9ybWF0IgogICAgfSwKICAgICJzdHJlYW0iOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgU3RyZWFtIHRoYXQgZWxlY3RlZCBhIGxlYWRlciIKICAgIH0sCiAgICAibGVhZGVyIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNlcnZlciBuYW1lIG9mIHRoZSBlbGVjdGVkIGxlYWRlciIKICAgIH0sCiAgICAicmVwbGljYXMiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAibmFtZSIsCiAgICAgICAgImN1cnJlbnQiLAogICAgICAgICJhY3RpdmUiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzZXJ2ZXIgbmFtZSBvZiB0aGUgcGVlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgIm1pbmltdW0iOiAxCiAgICAgICAgfSwKICAgICAgICAiY3VycmVudCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgaWYgdGhlIHNlcnZlciBpcyB1cCB0byBkYXRlIGFuZCBzeW5jaHJvbmlzZWQiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIsCiAgICAgICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiYWN0aXZlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk5hbm9zZWNvbmRzIHNpbmNlIHRoaXMgcGVlciB3YXMgbGFzdCBzZWVuIiwKICAgICAgICAgICJ0eXBlIjogIm51bWJlciIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.advisory.v1.consumer_leader_elected"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvY29uc3VtZXJfbGVhZGVyX2VsZWN0ZWQuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFuIEFkdmlzb3J5IHNlbnQgd2hlbiBhIGNsdXN0ZXJlZCBDb25zdW1lciBlbGVjdGVkIGEgbmV3IGxlYWRlciIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFkdmlzb3J5LnYxLmNvbnN1bWVyX2xlYWRlcl9lbGVjdGVkIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJyZXF1aXJlZCI6IFsKICAgICJ0eXBlIiwKICAgICJpZCIsCiAgICAidGltZXN0YW1wIiwKICAgICJzdHJlYW0iLAogICAgImNvbnN1bWVyIiwKICAgICJsZWFkZXIiLAogICAgInJlcGxpY2FzIgogIF0sCiAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFkdmlzb3J5LnYxLmNvbnN1bWVyX2xlYWRlcl9lbGVjdGVkIgogICAgfSwKICAgICJpZCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlVuaXF1ZSBjb3JyZWxhdGlvbiBJRCBmb3IgdGhpcyBldmVudCIKICAgIH0sCiAgICAidGltZXN0YW1wIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB0aGlzIGV2ZW50IHdhcyBjcmVhdGVkIGluIFJGQzMzMzkgZm9ybWF0IgogICAgfSwKICAgICJzdHJlYW0iOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgU3RyZWFtIHRoZSBDb25zdW1lciBiZWxvbmdzIHRvIgogICAgfSwKICAgICJjb25zdW1lciI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBDb25zdW1lciB0aGF0IGVsZWN0ZWQgYSBuZXcgbGVhZGVyIgogICAgfSwKICAgICJsZWFkZXIiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VydmVyIG5hbWUgb2YgdGhlIGVsZWN0ZWQgbGVhZGVyIgogICAgfSwKICAgICJyZXBsaWNhcyI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJuYW1lIiwKICAgICAgICAiY3VycmVudCIsCiAgICAgICAgImFjdGl2ZSIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNlcnZlciBuYW1lIG9mIHRoZSBwZWVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAibWluaW11bSI6IDEKICAgICAgICB9LAogICAgICAgICJjdXJyZW50IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkluZGljYXRlcyBpZiB0aGUgc2VydmVyIGlzIHVwIHRvIGRhdGUgYW5kIHN5bmNocm9uaXNlZCIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIiwKICAgICAgICAgICJkZWZhdWx0IjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJhY3RpdmUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTmFub3NlY29uZHMgc2luY2UgdGhpcyBwZWVyIHdhcyBsYXN0IHNlZW4iLAogICAgICAgICAgInR5cGUiOiAibnVtYmVyIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.advisory.v1.stream_quorum_lost"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvc3RyZWFtX3F1b3J1bV9sb3N0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBbiBBZHZpc29yeSBzZW50IHdoZW4gYSBjbHVzdGVyZWQgU3RyZWFtIGxvc3QgcXVvcnVtIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYWR2aXNvcnkudjEuc3RyZWFtX3F1b3J1bV9sb3N0IiwKICAidHlwZSI6ICJvYmplY3QiLAogICJyZXF1aXJlZCI6IFsKICAgICJ0eXBlIiwKICAgICJpZCIsCiAgICAidGltZXN0YW1wIiwKICAgICJzdHJlYW0iLAogICAgInJlcGxpY2FzIgogIF0sCiAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFkdmlzb3J5LnYxLnN0cmVhbV9xdW9ydW1fbG9zdCIKICAgIH0sCiAgICAiaWQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJVbmlxdWUgY29ycmVsYXRpb24gSUQgZm9yIHRoaXMgZXZlbnQiCiAgICB9LAogICAgInRpbWVzdGFtcCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhpcyBldmVudCB3YXMgY3JlYXRlZCBpbiBSRkMzMzM5IGZvcm1hdCIKICAgIH0sCiAgICAic3RyZWFtIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIFN0cmVhbSB0aGF0IGxvc3QgcXVvcnVtIgogICAgfSwKICAgICJyZXBsaWNhcyI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJuYW1lIiwKICAgICAgICAiY3VycmVudCIsCiAgICAgICAgImFjdGl2ZSIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNlcnZlciBuYW1lIG9mIHRoZSBwZWVyIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAibWluaW11bSI6IDEKICAgICAgICB9LAogICAgICAgICJjdXJyZW50IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkluZGljYXRlcyBpZiB0aGUgc2VydmVyIGlzIHVwIHRvIGRhdGUgYW5kIHN5bmNocm9uaXNlZCIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIiwKICAgICAgICAgICJkZWZhdWx0IjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJhY3RpdmUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTmFub3NlY29uZHMgc2luY2UgdGhpcyBwZWVyIHdhcyBsYXN0IHNlZW4iLAogICAgICAgICAgInR5cGUiOiAibnVtYmVyIgogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.advisory.v1.consumer_quorum_lost"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYWR2aXNvcnkvdjEvY29uc3VtZXJfcXVvcnVtX2xvc3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkFuIEFkdmlzb3J5IHNlbnQgd2hlbiBhIGNsdXN0ZXJlZCBDb25zdW1lciBsb3N0IHF1b3J1bSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFkdmlzb3J5LnYxLmNvbnN1bWVyX3F1b3J1bV9sb3N0IiwKICAidHlwZSI6ICJvYmplY3QiLAogICJyZXF1aXJlZCI6IFsKICAgICJ0eXBlIiwKICAgICJpZCIsCiAgICAidGltZXN0YW1wIiwKICAgICJzdHJlYW0iLAogICAgImNvbnN1bWVyIiwKICAgICJyZXBsaWNhcyIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hZHZpc29yeS52MS5jb25zdW1lcl9xdW9ydW1fbG9zdCIKICAgIH0sCiAgICAiaWQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJVbmlxdWUgY29ycmVsYXRpb24gSUQgZm9yIHRoaXMgZXZlbnQiCiAgICB9LAogICAgInRpbWVzdGFtcCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhpcyBldmVudCB3YXMgY3JlYXRlZCBpbiBSRkMzMzM5IGZvcm1hdCIKICAgIH0sCiAgICAic3RyZWFtIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIFN0cmVhbSB0aGUgQ29uc3VtZXIgYmVsb25ncyB0byIKICAgIH0sCiAgICAiY29uc3VtZXIiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgQ29uc3VtZXIgdGhhdCBsb3N0IHF1b3J1bSIKICAgIH0sCiAgICAicmVwbGljYXMiOiB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAibmFtZSIsCiAgICAgICAgImN1cnJlbnQiLAogICAgICAgICJhY3RpdmUiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzZXJ2ZXIgbmFtZSBvZiB0aGUgcGVlciIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgIm1pbmltdW0iOiAxCiAgICAgICAgfSwKICAgICAgICAiY3VycmVudCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgaWYgdGhlIHNlcnZlciBpcyB1cCB0byBkYXRlIGFuZCBzeW5jaHJvbmlzZWQiLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIsCiAgICAgICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAiYWN0aXZlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk5hbm9zZWNvbmRzIHNpbmNlIHRoaXMgcGVlciB3YXMgbGFzdCBzZWVuIiwKICAgICAgICAgICJ0eXBlIjogIm51bWJlciIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.metric.v1.consumer_ack"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vbWV0cmljL3YxL2NvbnN1bWVyX2Fjay5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiTWV0cmljIHB1Ymxpc2hlZCB3aGVuIGEgbWVzc2FnZSB3YXMgYWNrbm93bGVkZ2VkIHRvIGEgY29uc3VtZXIgd2l0aCBBY2sgU2FtcGxpbmcgZW5hYmxlZCIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLm1ldHJpYy52MS5jb25zdW1lcl9hY2siLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInR5cGUiLAogICAgImlkIiwKICAgICJ0aW1lc3RhbXAiLAogICAgInN0cmVhbSIsCiAgICAiY29uc3VtZXIiLAogICAgInN0cmVhbV9zZXEiLAogICAgImNvbnN1bWVyX3NlcSIsCiAgICAiYWNrX3RpbWUiLAogICAgImRlbGl2ZXJpZXMiCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0ubWV0cmljLnYxLmNvbnN1bWVyX2FjayIKICAgIH0sCiAgICAiaWQiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJVbmlxdWUgY29ycmVsYXRpb24gSUQgZm9yIHRoaXMgZXZlbnQiCiAgICB9LAogICAgInRpbWVzdGFtcCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImZvcm1hdCI6ICJkYXRlLXRpbWUiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhpcyBldmVudCB3YXMgY3JlYXRlZCBpbiBSRkMzMzM5IGZvcm1hdCIKICAgIH0sCiAgICAic3RyZWFtIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIHN0cmVhbSB3aGVyZSB0aGUgbWVzc2FnZSBpcyBzdG9yZWQiCiAgICB9LAogICAgImNvbnN1bWVyIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG5hbWUgb2YgdGhlIGNvbnN1bWVyIHdoZXJlIHRoZSBtZXNzYWdlIGlzIGhlbGQiCiAgICB9LAogICAgInN0cmVhbV9zZXEiOiB7CiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IDEsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2Ugb2YgdGhlIG1lc3NhZ2UgaW4gdGhlIHN0cmVhbSB0aGF0IHdlcmUgYWNrbm93bGVkZ2VkIgogICAgfSwKICAgICJjb25zdW1lcl9zZXEiOiB7CiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IDEsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc2VxdWVuY2Ugb2YgdGhlIG1lc3NhZ2UgaW4gdGhlIGNvbnN1bWVyIHRoYXQgd2VyZSBhY2tub3dsZWRnZWQiCiAgICB9LAogICAgImFja190aW1lIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAxLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgaXQgdG9vayBvbiB0aGUgZmluYWwgZGVsaXZlcnkgZm9yIHRoZSBtZXNzYWdlIHRvIGJlIGFja25vd2xlZGdlZCBpbiBuYW5vc2Vjb25kcyIKICAgIH0sCiAgICAiZGVsaXZlcmllcyI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMSwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBudW1iZXIgb2YgZGVsaXZlcmllcyB0aGF0IHdlcmUgYXR0ZW1wdGVkIGJlZm9yZSBiZWluZyBhY2tub3dsZWRnZWQiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.consumer_configuration"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2NvbmZpZ3VyYXRpb24uanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIlRoZSBkYXRhIHN0cnVjdHVyZSB0aGF0IGRlc2NyaWJlIHRoZSBjb25maWd1cmF0aW9uIG9mIGEgTkFUUyBKZXRTdHJlYW0gQ29uc3VtZXIiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuY29uc3VtZXJfY29uZmlndXJhdGlvbiIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgImFja19wb2xpY3kiLAogICAgInJlcGxheV9wb2xpY3kiCiAgXSwKICAiYWxsT2YiOiBbCiAgICB7CiAgICAgICJvbmVPZiI6IFsKICAgICAgICB7CiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAiYWxsIgogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgImxhc3QiCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfSwKICAgICAgICB7CiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAibmV3IgogICAgICAgICAgICAgIF0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgICAgICAgICAib3B0X3N0YXJ0X3NlcSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAiYnlfc3RhcnRfc2VxdWVuY2UiCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICAib3B0X3N0YXJ0X3NlcSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgewogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiLAogICAgICAgICAgICAib3B0X3N0YXJ0X3RpbWUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgImJ5X3N0YXJ0X3RpbWUiCiAgICAgICAgICAgICAgXQogICAgICAgICAgICB9LAogICAgICAgICAgICAib3B0X3N0YXJ0X3RpbWUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgXQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAiZHVyYWJsZV9uYW1lIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiQSB1bmlxdWUgbmFtZSBmb3IgYSBkdXJhYmxlIGNvbnN1bWVyIiwKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgInBhdHRlcm4iOiAiXlteLio+XSskIiwKICAgICAgIm1pbkxlbmd0aCI6IDEKICAgIH0sCiAgICAiZGVsaXZlcl9zdWJqZWN0IjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAibWluTGVuZ3RoIjogMQogICAgfSwKICAgICJhY2tfcG9saWN5IjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAibm9uZSIsCiAgICAgICAgImFsbCIsCiAgICAgICAgImV4cGxpY2l0IgogICAgICBdCiAgICB9LAogICAgImFja193YWl0IjogewogICAgICAiZGVzY3JpcHRpb24iOiAiSG93IGxvbmcgKGluIG5hbm9zZWNvbmRzKSB0byBhbGxvdyBtZXNzYWdlcyB0byByZW1haW4gdW4tYWNrbm93bGVkZ2VkIGJlZm9yZSBhdHRlbXB0aW5nIHJlZGVsaXZlcnkiLAogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAxCiAgICB9LAogICAgIm1heF9kZWxpdmVyIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAtMQogICAgfSwKICAgICJmaWx0ZXJfc3ViamVjdCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgfSwKICAgICJyZXBsYXlfcG9saWN5IjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAiaW5zdGFudCIsCiAgICAgICAgIm9yaWdpbmFsIgogICAgICBdCiAgICB9LAogICAgInNhbXBsZV9mcmVxIjogewogICAgICAidHlwZSI6ICJzdHJpbmciCiAgICB9LAogICAgInJhdGVfbGltaXRfYnBzIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSByYXRlIGF0IHdoaWNoIG1lc3NhZ2VzIHdpbGwgYmUgZGVsaXZlcmVkIHRvIGNsaWVudHMsIGV4cHJlc3NlZCBpbiBiaXQgcGVyIHNlY29uZCIsCiAgICAgICJtaW5pbXVtIjogMAogICAgfSwKICAgICJtYXhfYWNrX3BlbmRpbmciOiB7CiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIG1lc3NhZ2VzIHdpdGhvdXQgYWNrbm93bGVkZ2VtZW50IHRoYXQgY2FuIGJlIG91dHN0YW5kaW5nLCBvbmNlIHRoaXMgbGltaXQgaXMgcmVhY2hlZCBtZXNzYWdlIGRlbGl2ZXJ5IHdpbGwgYmUgc3VzcGVuZGVkIiwKICAgICAgIm1pbmltdW0iOiAwCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_configuration"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9jb25maWd1cmF0aW9uLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGUgZGF0YSBzdHJ1Y3R1cmUgdGhhdCBkZXNjcmliZSB0aGUgY29uZmlndXJhdGlvbiBvZiBhIE5BVFMgSmV0U3RyZWFtIFN0cmVhbSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fY29uZmlndXJhdGlvbiIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAic3ViamVjdHMiLAogICAgInJldGVudGlvbiIsCiAgICAibWF4X2NvbnN1bWVycyIsCiAgICAibWF4X21zZ3MiLAogICAgIm1heF9ieXRlcyIsCiAgICAibWF4X2FnZSIsCiAgICAic3RvcmFnZSIsCiAgICAibnVtX3JlcGxpY2FzIgogIF0sCiAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgInByb3BlcnRpZXMiOiB7CiAgICAibmFtZSI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIkEgdW5pcXVlIG5hbWUgZm9yIHRoZSBTdHJlYW0sIGVtcHR5IGZvciBTdHJlYW0gVGVtcGxhdGVzLiIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJwYXR0ZXJuIjogIl5bXi4qPl0qJCIsCiAgICAgICJtaW5MZW5ndGgiOiAwCiAgICB9LAogICAgInN1YmplY3RzIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiQSBsaXN0IG9mIHN1YmplY3RzIHRvIGNvbnN1bWUsIHN1cHBvcnRzIHdpbGRjYXJkcy4iLAogICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICJtaW5MZW5ndGgiOiAxLAogICAgICAiaXRlbXMiOiB7CiAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAibWluTGVuZ3RoIjogMQogICAgICB9CiAgICB9LAogICAgInJldGVudGlvbiI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtZXNzYWdlcyBhcmUgcmV0YWluZWQgaW4gdGhlIFN0cmVhbSwgb25jZSB0aGlzIGlzIGV4Y2VlZGVkIG9sZCBtZXNzYWdlcyBhcmUgcmVtb3ZlZC4iLAogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiZW51bSI6IFsKICAgICAgICAibGltaXRzIiwKICAgICAgICAiaW50ZXJlc3QiLAogICAgICAgICJ3b3JrcXVldWUiCiAgICAgIF0sCiAgICAgICJkZWZhdWx0IjogImxpbWl0cyIKICAgIH0sCiAgICAibWF4X2NvbnN1bWVycyI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtYW55IENvbnN1bWVycyBjYW4gYmUgZGVmaW5lZCBmb3IgYSBnaXZlbiBTdHJlYW0uIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogLTEsCiAgICAgICJkZWZhdWx0IjogLTEKICAgIH0sCiAgICAibWF4X21zZ3MiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSBtZXNzYWdlcyBtYXkgYmUgaW4gYSBTdHJlYW0sIG9sZGVzdCBtZXNzYWdlcyB3aWxsIGJlIHJlbW92ZWQgaWYgdGhlIFN0cmVhbSBleGNlZWRzIHRoaXMgc2l6ZS4gLTEgZm9yIHVubGltaXRlZC4iLAogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgIm1pbmltdW0iOiAtMSwKICAgICAgImRlZmF1bHQiOiAtMQogICAgfSwKICAgICJtYXhfYnl0ZXMiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgYmlnIHRoZSBTdHJlYW0gbWF5IGJlLCB3aGVuIHRoZSBjb21iaW5lZCBzdHJlYW0gc2l6ZSBleGNlZWRzIHRoaXMgb2xkIG1lc3NhZ2VzIGFyZSByZW1vdmVkLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IC0xLAogICAgICAiZGVmYXVsdCI6IC0xCiAgICB9LAogICAgIm1heF9hZ2UiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJNYXhpbXVtIGFnZSBvZiBhbnkgbWVzc2FnZSBpbiB0aGUgc3RyZWFtLCBleHByZXNzZWQgaW4gbWljcm9zZWNvbmRzLiAwIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMCwKICAgICAgImRlZmF1bHQiOiAwCiAgICB9LAogICAgIm1heF9tc2dfc2l6ZSI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsYXJnZXN0IG1lc3NhZ2UgdGhhdCB3aWxsIGJlIGFjY2VwdGVkIGJ5IHRoZSBTdHJlYW0uIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogLTEsCiAgICAgICJkZWZhdWx0IjogLTEKICAgIH0sCiAgICAic3RvcmFnZSI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzdG9yYWdlIGJhY2tlbmQgdG8gdXNlIGZvciB0aGUgU3RyZWFtLiIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJlbnVtIjogWwogICAgICAgICJmaWxlIiwKICAgICAgICAibWVtb3J5IgogICAgICBdLAogICAgICAiZGVmYXVsdCI6ICJmaWxlIgogICAgfSwKICAgICJudW1fcmVwbGljYXMiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSByZXBsaWNhcyB0byBrZWVwIGZvciBlYWNoIG1lc3NhZ2UuIiwKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMSwKICAgICAgImRlZmF1bHQiOiAxLAogICAgICAibWF4aW11bSI6IDUKICAgIH0sCiAgICAibm9fYWNrIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiRGlzYWJsZXMgYWNrbm93bGVkZ2luZyBtZXNzYWdlcyB0aGF0IGFyZSByZWNlaXZlZCBieSB0aGUgU3RyZWFtLiIsCiAgICAgICJ0eXBlIjogImJvb2xlYW4iLAogICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICB9LAogICAgInRlbXBsYXRlX293bmVyIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiV2hlbiB0aGUgU3RyZWFtIGlzIG1hbmFnZWQgYnkgYSBTdHJlYW0gVGVtcGxhdGUgdGhpcyBpZGVudGlmaWVzIHRoZSB0ZW1wbGF0ZSB0aGF0IG1hbmFnZXMgdGhlIFN0cmVhbS4iLAogICAgICAidHlwZSI6ICJzdHJpbmciCiAgICB9LAogICAgImRpc2NhcmQiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJXaGVuIGEgU3RyZWFtIHJlYWNoIGl0J3MgbGltaXRzIGVpdGhlciBvbGQgbWVzc2FnZXMgYXJlIGRlbGV0ZWQgb3IgbmV3IG9uZXMgYXJlIGRlbmllZCIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJlbnVtIjogWwogICAgICAgICJvbGQiLAogICAgICAgICJuZXciCiAgICAgIF0sCiAgICAgICJkZWZhdWx0IjogIm9sZCIKICAgIH0sCiAgICAiZHVwbGljYXRlX3dpbmRvdyI6IHsKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHdpbmRvdyB0byB0cmFjayBkdXBsaWNhdGUgbWVzc2FnZXMgZm9yLCBleHByZXNzZWQgaW4gbWljcm9zZWNvbmRzLiAwIGZvciBkZWZhdWx0IiwKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJtaW5pbXVtIjogMCwKICAgICAgImRlZmF1bHQiOiAwCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_template_configuration"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9jb25maWd1cmF0aW9uLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJUaGUgZGF0YSBzdHJ1Y3R1cmUgdGhhdCBkZXNjcmliZSB0aGUgY29uZmlndXJhdGlvbiBvZiBhIE5BVFMgSmV0U3RyZWFtIFN0cmVhbSBUZW1wbGF0ZSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fdGVtcGxhdGVfY29uZmlndXJhdGlvbiIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAibmFtZSIsCiAgICAiY29uZmlnIiwKICAgICJtYXhfc3RyZWFtcyIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICJwcm9wZXJ0aWVzIjogewogICAgIm5hbWUiOiB7CiAgICAgICJkZXNjcmlwdGlvbiI6ICJBIHVuaXF1ZSBuYW1lIGZvciB0aGUgU3RyZWFtIFRlbXBsYXRlLiIsCiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJwYXR0ZXJuIjogIl5bXi4qPl0rJCIsCiAgICAgICJtaW5MZW5ndGgiOiAxCiAgICB9LAogICAgIm1heF9zdHJlYW1zIjogewogICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIFN0cmVhbXMgdGhpcyBUZW1wbGF0ZSBjYW4gY3JlYXRlLCAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAibWluaW11bSI6IC0xLAogICAgICAiZGVmYXVsdCI6IC0xCiAgICB9LAogICAgImNvbmZpZyI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJzdWJqZWN0cyIsCiAgICAgICAgInJldGVudGlvbiIsCiAgICAgICAgIm1heF9jb25zdW1lcnMiLAogICAgICAgICJtYXhfbXNncyIsCiAgICAgICAgIm1heF9ieXRlcyIsCiAgICAgICAgIm1heF9hZ2UiLAogICAgICAgICJzdG9yYWdlIiwKICAgICAgICAibnVtX3JlcGxpY2FzIgogICAgICBdLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgIm5hbWUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSB1bmlxdWUgbmFtZSBmb3IgdGhlIFN0cmVhbSwgZW1wdHkgZm9yIFN0cmVhbSBUZW1wbGF0ZXMuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAicGF0dGVybiI6ICJeW14uKj5dKiQiLAogICAgICAgICAgIm1pbkxlbmd0aCI6IDAKICAgICAgICB9LAogICAgICAgICJzdWJqZWN0cyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIGxpc3Qgb2Ygc3ViamVjdHMgdG8gY29uc3VtZSwgc3VwcG9ydHMgd2lsZGNhcmRzLiIsCiAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAibWluTGVuZ3RoIjogMSwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgIm1pbkxlbmd0aCI6IDEKICAgICAgICAgIH0KICAgICAgICB9LAogICAgICAgICJyZXRlbnRpb24iOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSG93IG1lc3NhZ2VzIGFyZSByZXRhaW5lZCBpbiB0aGUgU3RyZWFtLCBvbmNlIHRoaXMgaXMgZXhjZWVkZWQgb2xkIG1lc3NhZ2VzIGFyZSByZW1vdmVkLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICJsaW1pdHMiLAogICAgICAgICAgICAiaW50ZXJlc3QiLAogICAgICAgICAgICAid29ya3F1ZXVlIgogICAgICAgICAgXSwKICAgICAgICAgICJkZWZhdWx0IjogImxpbWl0cyIKICAgICAgICB9LAogICAgICAgICJtYXhfY29uc3VtZXJzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtYW55IENvbnN1bWVycyBjYW4gYmUgZGVmaW5lZCBmb3IgYSBnaXZlbiBTdHJlYW0uIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAtMSwKICAgICAgICAgICJkZWZhdWx0IjogLTEKICAgICAgICB9LAogICAgICAgICJtYXhfbXNncyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSBtZXNzYWdlcyBtYXkgYmUgaW4gYSBTdHJlYW0sIG9sZGVzdCBtZXNzYWdlcyB3aWxsIGJlIHJlbW92ZWQgaWYgdGhlIFN0cmVhbSBleGNlZWRzIHRoaXMgc2l6ZS4gLTEgZm9yIHVubGltaXRlZC4iLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IC0xLAogICAgICAgICAgImRlZmF1bHQiOiAtMQogICAgICAgIH0sCiAgICAgICAgIm1heF9ieXRlcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgYmlnIHRoZSBTdHJlYW0gbWF5IGJlLCB3aGVuIHRoZSBjb21iaW5lZCBzdHJlYW0gc2l6ZSBleGNlZWRzIHRoaXMgb2xkIG1lc3NhZ2VzIGFyZSByZW1vdmVkLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogLTEsCiAgICAgICAgICAiZGVmYXVsdCI6IC0xCiAgICAgICAgfSwKICAgICAgICAibWF4X2FnZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJNYXhpbXVtIGFnZSBvZiBhbnkgbWVzc2FnZSBpbiB0aGUgc3RyZWFtLCBleHByZXNzZWQgaW4gbWljcm9zZWNvbmRzLiAwIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwLAogICAgICAgICAgImRlZmF1bHQiOiAwCiAgICAgICAgfSwKICAgICAgICAibWF4X21zZ19zaXplIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsYXJnZXN0IG1lc3NhZ2UgdGhhdCB3aWxsIGJlIGFjY2VwdGVkIGJ5IHRoZSBTdHJlYW0uIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAtMSwKICAgICAgICAgICJkZWZhdWx0IjogLTEKICAgICAgICB9LAogICAgICAgICJzdG9yYWdlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzdG9yYWdlIGJhY2tlbmQgdG8gdXNlIGZvciB0aGUgU3RyZWFtLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICJmaWxlIiwKICAgICAgICAgICAgIm1lbW9yeSIKICAgICAgICAgIF0sCiAgICAgICAgICAiZGVmYXVsdCI6ICJmaWxlIgogICAgICAgIH0sCiAgICAgICAgIm51bV9yZXBsaWNhcyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSByZXBsaWNhcyB0byBrZWVwIGZvciBlYWNoIG1lc3NhZ2UuIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAxLAogICAgICAgICAgImRlZmF1bHQiOiAxLAogICAgICAgICAgIm1heGltdW0iOiA1CiAgICAgICAgfSwKICAgICAgICAibm9fYWNrIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkRpc2FibGVzIGFja25vd2xlZGdpbmcgbWVzc2FnZXMgdGhhdCBhcmUgcmVjZWl2ZWQgYnkgdGhlIFN0cmVhbS4iLAogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIsCiAgICAgICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICAgICAgfSwKICAgICAgICAidGVtcGxhdGVfb3duZXIiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiV2hlbiB0aGUgU3RyZWFtIGlzIG1hbmFnZWQgYnkgYSBTdHJlYW0gVGVtcGxhdGUgdGhpcyBpZGVudGlmaWVzIHRoZSB0ZW1wbGF0ZSB0aGF0IG1hbmFnZXMgdGhlIFN0cmVhbS4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgIH0sCiAgICAgICAgImRpc2NhcmQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiV2hlbiBhIFN0cmVhbSByZWFjaCBpdCdzIGxpbWl0cyBlaXRoZXIgb2xkIG1lc3NhZ2VzIGFyZSBkZWxldGVkIG9yIG5ldyBvbmVzIGFyZSBkZW5pZWQiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAib2xkIiwKICAgICAgICAgICAgIm5ldyIKICAgICAgICAgIF0sCiAgICAgICAgICAiZGVmYXVsdCI6ICJvbGQiCiAgICAgICAgfSwKICAgICAgICAiZHVwbGljYXRlX3dpbmRvdyI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgdGltZSB3aW5kb3cgdG8gdHJhY2sgZHVwbGljYXRlIG1lc3NhZ2VzIGZvciwgZXhwcmVzc2VkIGluIG1pY3Jvc2Vjb25kcy4gMCBmb3IgZGVmYXVsdCIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMCwKICAgICAgICAgICJkZWZhdWx0IjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.account_info_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2FjY291bnRfaW5mb19yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5JTkZPIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5hY2NvdW50X2luZm9fcmVzcG9uc2UiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInR5cGUiCiAgXSwKICAib25lT2YiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAibWVtb3J5IiwKICAgICAgICAic3RvcmFnZSIsCiAgICAgICAgInN0cmVhbXMiLAogICAgICAgICJsaW1pdHMiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJtZW1vcnkiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTWVtb3J5IFN0b3JhZ2UgYmVpbmcgdXNlZCBmb3IgU3RyZWFtIE1lc3NhZ2Ugc3RvcmFnZSIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0sCiAgICAgICAgInN0b3JhZ2UiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRmlsZSBTdG9yYWdlIGJlaW5nIHVzZWQgZm9yIFN0cmVhbSBNZXNzYWdlIHN0b3JhZ2UiLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9LAogICAgICAgICJzdHJlYW1zIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk51bWJlciBvZiBhY3RpdmUgU3RyZWFtcyIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0sCiAgICAgICAgImxpbWl0cyI6IHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgIm1heF9jb25zdW1lcnMiLAogICAgICAgICAgICAibWF4X21lbW9yeSIsCiAgICAgICAgICAgICJtYXhfc3RvcmFnZSIsCiAgICAgICAgICAgICJtYXhfc3RyZWFtcyIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgIm1heF9tZW1vcnkiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBtYXhpbXVtIGFtb3VudCBvZiBNZW1vcnkgc3RvcmFnZSBTdHJlYW0gTWVzc2FnZXMgbWF5IGNvbnN1bWUiLAogICAgICAgICAgICAgICJtaW5pbXVtIjogLTEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIm1heF9zdG9yYWdlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbWF4aW11bSBhbW91bnQgb2YgRmlsZSBzdG9yYWdlIFN0cmVhbSBNZXNzYWdlcyBtYXkgY29uc3VtZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAtMQogICAgICAgICAgICB9LAogICAgICAgICAgICAibWF4X3N0cmVhbXMiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBtYXhpbXVtIG51bWJlciBvZiBTdHJlYW1zIGFuIGFjY291bnQgY2FuIGNyZWF0ZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAtMQogICAgICAgICAgICB9LAogICAgICAgICAgICAibWF4X2NvbnN1bWVycyI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIENvbnN1bWVyIGFuIGFjY291bnQgY2FuIGNyZWF0ZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAtMQogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuYWNjb3VudF9pbmZvX3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.consumer_create_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2NyZWF0ZV9yZXF1ZXN0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlcXVlc3QgdG8gdGhlIEpldFN0cmVhbSAkSlMuQVBJLkNPTlNVTUVSLkNSRUFURSBhbmQgJEpTLkFQSS5DT05TVU1FUi5EVVJBQkxFLkNSRUFURSBBUElzIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX2NyZWF0ZV9yZXF1ZXN0IiwKICAidHlwZSI6ICJvYmplY3QiLAogICJyZXF1aXJlZCI6IFsKICAgICJzdHJlYW1fbmFtZSIsCiAgICAiY29uZmlnIgogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAic3RyZWFtX25hbWUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgbmFtZSBvZiB0aGUgc3RyZWFtIHRvIGNyZWF0ZSB0aGUgY29uc3VtZXIgaW4iCiAgICB9LAogICAgImNvbmZpZyI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBjb25zdW1lciBjb25maWd1cmF0aW9uIiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJkZWxpdmVyX3BvbGljeSIsCiAgICAgICAgImFja19wb2xpY3kiLAogICAgICAgICJyZXBsYXlfcG9saWN5IgogICAgICBdLAogICAgICAiYWxsT2YiOiBbCiAgICAgICAgewogICAgICAgICAgIm9uZU9mIjogWwogICAgICAgICAgICB7CiAgICAgICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IgogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiOiB7CiAgICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgICAgICJhbGwiCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSI6IHsKICAgICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAgICAgImxhc3QiCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0KICAgICAgICAgICAgICB9CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgIHsKICAgICAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICAgICAiZGVsaXZlcl9wb2xpY3kiCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSI6IHsKICAgICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAgICAgIm5ldyIKICAgICAgICAgICAgICAgICAgXQogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSIsCiAgICAgICAgICAgICAgICAib3B0X3N0YXJ0X3NlcSIKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAgICAgImRlbGl2ZXJfcG9saWN5IjogewogICAgICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICAgICAiZW51bSI6IFsKICAgICAgICAgICAgICAgICAgICAiYnlfc3RhcnRfc2VxdWVuY2UiCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAib3B0X3N0YXJ0X3NlcSI6IHsKICAgICAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfSwKICAgICAgICAgICAgewogICAgICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSIsCiAgICAgICAgICAgICAgICAib3B0X3N0YXJ0X3RpbWUiCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgICAgICJkZWxpdmVyX3BvbGljeSI6IHsKICAgICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICAgICAgICAgImJ5X3N0YXJ0X3RpbWUiCiAgICAgICAgICAgICAgICAgIF0KICAgICAgICAgICAgICAgIH0sCiAgICAgICAgICAgICAgICAib3B0X3N0YXJ0X3RpbWUiOiB7CiAgICAgICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgICAgICAgICAgICAgfQogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgXQogICAgICAgIH0KICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImR1cmFibGVfbmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIHVuaXF1ZSBuYW1lIGZvciBhIGR1cmFibGUgY29uc3VtZXIiLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJwYXR0ZXJuIjogIl5bXi4qPl0rJCIsCiAgICAgICAgICAibWluTGVuZ3RoIjogMQogICAgICAgIH0sCiAgICAgICAgImRlbGl2ZXJfc3ViamVjdCI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAibWluTGVuZ3RoIjogMQogICAgICAgIH0sCiAgICAgICAgImFja19wb2xpY3kiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICJub25lIiwKICAgICAgICAgICAgImFsbCIsCiAgICAgICAgICAgICJleHBsaWNpdCIKICAgICAgICAgIF0KICAgICAgICB9LAogICAgICAgICJhY2tfd2FpdCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbG9uZyAoaW4gbmFub3NlY29uZHMpIHRvIGFsbG93IG1lc3NhZ2VzIHRvIHJlbWFpbiB1bi1hY2tub3dsZWRnZWQgYmVmb3JlIGF0dGVtcHRpbmcgcmVkZWxpdmVyeSIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMQogICAgICAgIH0sCiAgICAgICAgIm1heF9kZWxpdmVyIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IC0xCiAgICAgICAgfSwKICAgICAgICAiZmlsdGVyX3N1YmplY3QiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicmVwbGF5X3BvbGljeSI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZW51bSI6IFsKICAgICAgICAgICAgImluc3RhbnQiLAogICAgICAgICAgICAib3JpZ2luYWwiCiAgICAgICAgICBdCiAgICAgICAgfSwKICAgICAgICAic2FtcGxlX2ZyZXEiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAicmF0ZV9saW1pdF9icHMiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgcmF0ZSBhdCB3aGljaCBtZXNzYWdlcyB3aWxsIGJlIGRlbGl2ZXJlZCB0byBjbGllbnRzLCBleHByZXNzZWQgaW4gYml0IHBlciBzZWNvbmQiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAibWF4X2Fja19wZW5kaW5nIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIG1lc3NhZ2VzIHdpdGhvdXQgYWNrbm93bGVkZ2VtZW50IHRoYXQgY2FuIGJlIG91dHN0YW5kaW5nLCBvbmNlIHRoaXMgbGltaXQgaXMgcmVhY2hlZCBtZXNzYWdlIGRlbGl2ZXJ5IHdpbGwgYmUgc3VzcGVuZGVkIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.consumer_create_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.consumer_delete_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2RlbGV0ZV9yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5DT05TVU1FUi5ERUxFVEUgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX2RlbGV0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInN1Y2Nlc3MiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzdWNjZXNzIjogewogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuY29uc3VtZXJfZGVsZXRlX3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.consumer_info_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.consumer_list_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2xpc3RfcmVxdWVzdC5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXF1ZXN0IHRvIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5DT05TVU1FUi5MSVNUIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5jb25zdW1lcl9saXN0X3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJvZmZzZXQiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJvZmZzZXQiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIF0KfQo=")
	schemas["io.nats.jetstream.api.v1.consumer_list_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.consumer_names_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX25hbWVzX3JlcXVlc3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVxdWVzdCB0byB0aGUgSmV0U3RyZWFtICRKUy5BUEkuQ09OU1VNRVIuTkFNRVMgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX25hbWVzX3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJvZmZzZXQiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJvZmZzZXQiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAic3ViamVjdCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIkZpbHRlciB0aGUgbmFtZXMgdG8gdGhvc2UgY29uc3VtaW5nIG1lc3NhZ2VzIG1hdGNoaW5nIHRoaXMgc3ViamVjdCBvciB3aWxkY2FyZCIKICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.api.v1.consumer_names_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX25hbWVzX3Jlc3BvbnNlLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlc3BvbnNlIGZyb20gdGhlIEpldFN0cmVhbSAkSlMuQVBJLkNPTlNVTUVSLk5BTUVTIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5jb25zdW1lcl9uYW1lc19yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJhbGxPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJ0b3RhbCIsCiAgICAgICAgIm9mZnNldCIsCiAgICAgICAgImxpbWl0IgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAidG90YWwiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0sCiAgICAgICAgIm9mZnNldCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAibGltaXQiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgIm9uZU9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiY29uc3VtZXJzIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY29uc3VtZXJzIjogewogICAgICAgICAgInR5cGUiOiAiYXJyYXkiLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLmNvbnN1bWVyX25hbWVzX3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.consumer_getnext_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL2NvbnN1bWVyX2dldG5leHRfcmVxdWVzdC5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXF1ZXN0IHRvIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5DT05TVU1FUi5NU0cuTkVYVCBBUEkiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuY29uc3VtZXJfZ2V0bmV4dF9yZXF1ZXN0IiwKICAidHlwZSI6ICJvYmplY3QiLAogICJwcm9wZXJ0aWVzIjogewogICAgImV4cGlyZXMiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJBIHRpbWUgd2hlbiB0aGlzIHJlcXVlc3Qgc2hvdWxkIGJlIGV4cGlyZWQgZnJvbSB0aGUgc2VydmVyIHdhaXQgbGlzdCIsCiAgICAgICJmb3JtYXQiOiAiZGF0ZS10aW1lIgogICAgfSwKICAgICJiYXRjaCI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSBtZXNzYWdlcyB0aGUgc2VydmVyIHNob3VsZCBkZWxpdmVyIHRvIHRoZSByZXF1ZXN0b3IiLAogICAgICAibWluaW11bSI6IDAKICAgIH0sCiAgICAibm9fd2FpdCI6IHsKICAgICAgInR5cGUiOiAiYm9vbGVhbiIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJXaGVuIHRydWUgYSByZXNwb25zZSB3aXRoIGEgNDA0IHN0YXR1cyBoZWFkZXIgd2lsbCBiZSByZXR1cm5lZCB3aGVuIG5vIG1lc3NhZ2VzIGFyZSBhdmFpbGFibGUiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_create_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9jcmVhdGVfcmVxdWVzdC5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXF1ZXN0IHRvIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uQ1JFQVRFIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fY3JlYXRlX3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInN1YmplY3RzIiwKICAgICAgICAicmV0ZW50aW9uIiwKICAgICAgICAibWF4X2NvbnN1bWVycyIsCiAgICAgICAgIm1heF9tc2dzIiwKICAgICAgICAibWF4X2J5dGVzIiwKICAgICAgICAibWF4X2FnZSIsCiAgICAgICAgInN0b3JhZ2UiLAogICAgICAgICJudW1fcmVwbGljYXMiCiAgICAgIF0sCiAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibmFtZSI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIHVuaXF1ZSBuYW1lIGZvciB0aGUgU3RyZWFtLCBlbXB0eSBmb3IgU3RyZWFtIFRlbXBsYXRlcy4iLAogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJwYXR0ZXJuIjogIl5bXi4qPl0qJCIsCiAgICAgICAgICAibWluTGVuZ3RoIjogMAogICAgICAgIH0sCiAgICAgICAgInN1YmplY3RzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgbGlzdCBvZiBzdWJqZWN0cyB0byBjb25zdW1lLCBzdXBwb3J0cyB3aWxkY2FyZHMuIiwKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJtaW5MZW5ndGgiOiAxLAogICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAibWluTGVuZ3RoIjogMQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgInJldGVudGlvbiI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWVzc2FnZXMgYXJlIHJldGFpbmVkIGluIHRoZSBTdHJlYW0sIG9uY2UgdGhpcyBpcyBleGNlZWRlZCBvbGQgbWVzc2FnZXMgYXJlIHJlbW92ZWQuIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZW51bSI6IFsKICAgICAgICAgICAgImxpbWl0cyIsCiAgICAgICAgICAgICJpbnRlcmVzdCIsCiAgICAgICAgICAgICJ3b3JrcXVldWUiCiAgICAgICAgICBdLAogICAgICAgICAgImRlZmF1bHQiOiAibGltaXRzIgogICAgICAgIH0sCiAgICAgICAgIm1heF9jb25zdW1lcnMiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSG93IG1hbnkgQ29uc3VtZXJzIGNhbiBiZSBkZWZpbmVkIGZvciBhIGdpdmVuIFN0cmVhbS4gLTEgZm9yIHVubGltaXRlZC4iLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IC0xLAogICAgICAgICAgImRlZmF1bHQiOiAtMQogICAgICAgIH0sCiAgICAgICAgIm1heF9tc2dzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtYW55IG1lc3NhZ2VzIG1heSBiZSBpbiBhIFN0cmVhbSwgb2xkZXN0IG1lc3NhZ2VzIHdpbGwgYmUgcmVtb3ZlZCBpZiB0aGUgU3RyZWFtIGV4Y2VlZHMgdGhpcyBzaXplLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogLTEsCiAgICAgICAgICAiZGVmYXVsdCI6IC0xCiAgICAgICAgfSwKICAgICAgICAibWF4X2J5dGVzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBiaWcgdGhlIFN0cmVhbSBtYXkgYmUsIHdoZW4gdGhlIGNvbWJpbmVkIHN0cmVhbSBzaXplIGV4Y2VlZHMgdGhpcyBvbGQgbWVzc2FnZXMgYXJlIHJlbW92ZWQuIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAtMSwKICAgICAgICAgICJkZWZhdWx0IjogLTEKICAgICAgICB9LAogICAgICAgICJtYXhfYWdlIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIk1heGltdW0gYWdlIG9mIGFueSBtZXNzYWdlIGluIHRoZSBzdHJlYW0sIGV4cHJlc3NlZCBpbiBtaWNyb3NlY29uZHMuIDAgZm9yIHVubGltaXRlZC4iLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAsCiAgICAgICAgICAiZGVmYXVsdCI6IDAKICAgICAgICB9LAogICAgICAgICJtYXhfbXNnX3NpemUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGxhcmdlc3QgbWVzc2FnZSB0aGF0IHdpbGwgYmUgYWNjZXB0ZWQgYnkgdGhlIFN0cmVhbS4gLTEgZm9yIHVubGltaXRlZC4iLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IC0xLAogICAgICAgICAgImRlZmF1bHQiOiAtMQogICAgICAgIH0sCiAgICAgICAgInN0b3JhZ2UiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHN0b3JhZ2UgYmFja2VuZCB0byB1c2UgZm9yIHRoZSBTdHJlYW0uIiwKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZW51bSI6IFsKICAgICAgICAgICAgImZpbGUiLAogICAgICAgICAgICAibWVtb3J5IgogICAgICAgICAgXSwKICAgICAgICAgICJkZWZhdWx0IjogImZpbGUiCiAgICAgICAgfSwKICAgICAgICAibnVtX3JlcGxpY2FzIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtYW55IHJlcGxpY2FzIHRvIGtlZXAgZm9yIGVhY2ggbWVzc2FnZS4iLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDEsCiAgICAgICAgICAiZGVmYXVsdCI6IDEsCiAgICAgICAgICAibWF4aW11bSI6IDUKICAgICAgICB9LAogICAgICAgICJub19hY2siOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiRGlzYWJsZXMgYWNrbm93bGVkZ2luZyBtZXNzYWdlcyB0aGF0IGFyZSByZWNlaXZlZCBieSB0aGUgU3RyZWFtLiIsCiAgICAgICAgICAidHlwZSI6ICJib29sZWFuIiwKICAgICAgICAgICJkZWZhdWx0IjogZmFsc2UKICAgICAgICB9LAogICAgICAgICJ0ZW1wbGF0ZV9vd25lciI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJXaGVuIHRoZSBTdHJlYW0gaXMgbWFuYWdlZCBieSBhIFN0cmVhbSBUZW1wbGF0ZSB0aGlzIGlkZW50aWZpZXMgdGhlIHRlbXBsYXRlIHRoYXQgbWFuYWdlcyB0aGUgU3RyZWFtLiIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciCiAgICAgICAgfSwKICAgICAgICAiZGlzY2FyZCI6IHsKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJXaGVuIGEgU3RyZWFtIHJlYWNoIGl0J3MgbGltaXRzIGVpdGhlciBvbGQgbWVzc2FnZXMgYXJlIGRlbGV0ZWQgb3IgbmV3IG9uZXMgYXJlIGRlbmllZCIsCiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImVudW0iOiBbCiAgICAgICAgICAgICJvbGQiLAogICAgICAgICAgICAibmV3IgogICAgICAgICAgXSwKICAgICAgICAgICJkZWZhdWx0IjogIm9sZCIKICAgICAgICB9LAogICAgICAgICJkdXBsaWNhdGVfd2luZG93IjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0aW1lIHdpbmRvdyB0byB0cmFjayBkdXBsaWNhdGUgbWVzc2FnZXMgZm9yLCBleHByZXNzZWQgaW4gbWljcm9zZWNvbmRzLiAwIGZvciBkZWZhdWx0IiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwLAogICAgICAgICAgImRlZmF1bHQiOiAwCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_create_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_delete_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9kZWxldGVfcmVzcG9uc2UuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVzcG9uc2UgZnJvbSB0aGUgSmV0U3RyZWFtICRKUy5BUEkuU1RSRUFNLkRFTEVURSBBUEkiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX2RlbGV0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInN1Y2Nlc3MiCiAgICAgIF0sCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzdWNjZXNzIjogewogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX2RlbGV0ZV9yZXNwb25zZSIKICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.api.v1.stream_info_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_list_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9saXN0X3JlcXVlc3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVxdWVzdCB0byB0aGUgSmV0U3RyZWFtICRKUy5BUEkuU1RSRUFNLkxJU1QgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9saXN0X3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJvZmZzZXQiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJvZmZzZXQiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIF0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_list_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_msg_delete_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9tc2dfZGVsZXRlX3Jlc3BvbnNlLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlc3BvbnNlIGZyb20gdGhlIEpldFN0cmVhbSAkSlMuQVBJLlNUUkVBTS5NU0cuREVMRVRFIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fbXNnX2RlbGV0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInN1Y2Nlc3MiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzdWNjZXNzIjogewogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX21zZ19kZWxldGVfcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_msg_get_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9tc2dfZ2V0X3JlcXVlc3QuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVxdWVzdCB0byB0aGUgSmV0U3RyZWFtICRKUy5BUEkuU1RSRUFNLk1TRy5HRVQgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9tc2dfZ2V0X3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgInNlcSIKICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInNlcSI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJTdHJlYW0gc2VxdWVuY2UgbnVtYmVyIG9mIHRoZSBtZXNzYWdlIHRvIHJldHJpZXZlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_msg_get_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9tc2dfZ2V0X3Jlc3BvbnNlLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlc3BvbnNlIGZyb20gdGhlIEpldFN0cmVhbSAkSlMuQVBJLlNUUkVBTS5NU0cuR0VUIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fbXNnX2dldF9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgIm1lc3NhZ2UiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJtZXNzYWdlIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAic3ViamVjdCIsCiAgICAgICAgICAgICJzZXEiLAogICAgICAgICAgICAiZGF0YSIsCiAgICAgICAgICAgICJ0aW1lIgogICAgICAgICAgXSwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAic3ViamVjdCI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgc3ViamVjdCB0aGUgbWVzc2FnZSB3YXMgb3JpZ2luYWxseSByZWNlaXZlZCBvbiIsCiAgICAgICAgICAgICAgIm1pbkxlbmd0aCI6IDEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInNlcSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNlcXVlbmNlIG51bWJlciBvZiB0aGUgbWVzc2FnZSBpbiB0aGUgU3RyZWFtIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRhdGEiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIGJhc2U2NCBlbmNvZGVkIHBheWxvYWQgb2YgdGhlIG1lc3NhZ2UgYm9keSIsCiAgICAgICAgICAgICAgIm1pbkxlbmd0aCI6IDAKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInRpbWUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgdGhlIG1lc3NhZ2Ugd2FzIHJlY2VpdmVkIiwKICAgICAgICAgICAgICAiZm9ybWF0IjogImRhdGUtdGltZSIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fbXNnX2dldF9yZXNwb25zZSIKICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.api.v1.stream_names_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9uYW1lc19yZXF1ZXN0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlcXVlc3QgdG8gdGhlIEpldFN0cmVhbSAkSlMuQVBJLlNUUkVBTS5OQU1FUyBBUEkiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX25hbWVzX3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJvZmZzZXQiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJvZmZzZXQiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIF0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_names_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9uYW1lc19yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uTkFNRVMgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9uYW1lc19yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJhbGxPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJ0b3RhbCIsCiAgICAgICAgIm9mZnNldCIsCiAgICAgICAgImxpbWl0IgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAidG90YWwiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0sCiAgICAgICAgIm9mZnNldCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAibGltaXQiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgIm9uZU9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic3RyZWFtcyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvbnN1bWVycyI6IHsKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fbmFtZXNfcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_purge_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9wdXJnZV9yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uUFVSR0UgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9wdXJnZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInN1Y2Nlc3MiLAogICAgICAgICJwdXJnZWQiCiAgICAgIF0sCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzdWNjZXNzIjogewogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9LAogICAgICAgICJwdXJnZWQiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiTnVtYmVyIG9mIG1lc3NhZ2VzIHB1cmdlZCBmcm9tIHRoZSBTdHJlYW0iLAogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX3B1cmdlX3Jlc3BvbnNlIgogICAgfQogIH0KfQo=")
	schemas["io.nats.jetstream.api.v1.stream_snapshot_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9zbmFwc2hvdF9yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uU05BUFNIT1QgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9zbmFwc2hvdF9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAib25lT2YiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZXJyb3IiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJlcnJvciI6IHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJjb2RlIgogICAgICAgICAgXSwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSFRUUCBsaWtlIGVycm9yIGNvZGUgaW4gdGhlIDMwMCB0byA1MDAgcmFuZ2UiLAogICAgICAgICAgICAgICJtaW5pbXVtIjogMzAwLAogICAgICAgICAgICAgICJtYXhpbXVtIjogNjk5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIGh1bWFuIGZyaWVuZGx5IGRlc2NyaXB0aW9uIG9mIHRoZSBlcnJvciIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHsKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJudW1fYmxrcyIsCiAgICAgICAgImJsa19zaXplIgogICAgICBdLAogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAibnVtX2Jsa3MiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJUaGUgYXBwcm94aW1hdGUgbnVtYmVyIG9mIGJsb2NrcyBpbiB0aGUgc25hcHNob3QiLAogICAgICAgICAgIm1pbmltdW0iOiAxCiAgICAgICAgfSwKICAgICAgICAiYmxrX3NpemUiOiB7CiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHNpemUgb2YgZWFjaCBibG9jayBiZWluZyBzZW50IiwKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAxCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXSwKICAicHJvcGVydGllcyI6IHsKICAgICJ0eXBlIjogewogICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAiY29uc3QiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV9zbmFwc2hvdF9yZXNwb25zZSIKICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.api.v1.stream_snapshot_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9zbmFwc2hvdF9yZXF1ZXN0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlcXVlc3QgdG8gdGhlIEpldFN0cmVhbSAkSlMuQVBJLlNUUkVBTS5TTkFQU0hPVCBBUEkiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX3NuYXBzaG90X3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgInJlcXVpcmVkIjogWwogICAgImRlbGl2ZXJfc3ViamVjdCIKICBdLAogICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICJwcm9wZXJ0aWVzIjogewogICAgImRlbGl2ZXJfc3ViamVjdCI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBOQVRTIHN1YmplY3Qgd2hlcmUgdGhlIHNuYXBzaG90IHdpbGwgYmUgZGVsaXZlcmVkIiwKICAgICAgIm1pbkxlbmd0aCI6IDEKICAgIH0sCiAgICAibm9fY29uc3VtZXJzIjogewogICAgICAidHlwZSI6ICJib29sZWFuIiwKICAgICAgImRlc2NyaXB0aW9uIjogIldoZW4gdHJ1ZSBjb25zdW1lciBzdGF0ZXMgYW5kIGNvbmZpZ3VyYXRpb25zIHdpbGwgbm90IGJlIHByZXNlbnQgaW4gdGhlIHNuYXBzaG90IgogICAgfSwKICAgICJjaHVua19zaXplIjogewogICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzaXplIG9mIGRhdGEgY2h1bmtzIHRvIHNlbmQgdG8gZGVsaXZlcl9zdWJqZWN0IiwKICAgICAgIm1pbmltdW0iOiAxMDI0CiAgICB9LAogICAgImpzY2siOiB7CiAgICAgICJ0eXBlIjogImJvb2xlYW4iLAogICAgICAiZGVzY3JpcHRpb24iOiAiQ2hlY2sgYWxsIG1lc3NhZ2UncyBjaGVja3N1bXMgcHJpb3IgdG8gc25hcHNob3QiLAogICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_restore_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV9yZXN0b3JlX3Jlc3BvbnNlLmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlc3BvbnNlIGZyb20gdGhlIEpldFN0cmVhbSAkSlMuQVBJLlNUUkVBTS5SRVNUT1JFIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fcmVzdG9yZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAib25lT2YiOiBbCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAiZXJyb3IiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJlcnJvciI6IHsKICAgICAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgICAgICJjb2RlIgogICAgICAgICAgXSwKICAgICAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiSFRUUCBsaWtlIGVycm9yIGNvZGUgaW4gdGhlIDMwMCB0byA1MDAgcmFuZ2UiLAogICAgICAgICAgICAgICJtaW5pbXVtIjogMzAwLAogICAgICAgICAgICAgICJtYXhpbXVtIjogNjk5CiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6IHsKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIGh1bWFuIGZyaWVuZGx5IGRlc2NyaXB0aW9uIG9mIHRoZSBlcnJvciIKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKICAgIHsKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJkZWxpdmVyX3N1YmplY3QiCiAgICAgIF0sCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJkZWxpdmVyX3N1YmplY3QiOiB7CiAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBTdWJqZWN0IHRvIHNlbmQgcmVzdG9yZSBjaHVua3MgdG8iLAogICAgICAgICAgIm1pbkxlbmd0aCI6IDEKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX3Jlc3RvcmVfcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_template_create_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9jcmVhdGVfcmVxdWVzdC5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXF1ZXN0IHRvIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uVEVNUExBVEUuQ1JFQVRFIEFQSSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fdGVtcGxhdGVfY3JlYXRlX3JlcXVlc3QiLAogICJ0eXBlIjogIm9iamVjdCIsCiAgImFsbE9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJuYW1lIiwKICAgICAgICAiY29uZmlnIiwKICAgICAgICAibWF4X3N0cmVhbXMiCiAgICAgIF0sCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJuYW1lIjogewogICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIHVuaXF1ZSBuYW1lIGZvciB0aGUgVGVtcGxhdGUiCiAgICAgICAgfSwKICAgICAgICAiY29uZmlnIjogewogICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSB0ZW1wbGF0ZSBjb25maWd1cmF0aW9uIHRvIGNyZWF0ZSBTdHJlYW1zIHdpdGgiLAogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgInN1YmplY3RzIiwKICAgICAgICAgICAgInJldGVudGlvbiIsCiAgICAgICAgICAgICJtYXhfY29uc3VtZXJzIiwKICAgICAgICAgICAgIm1heF9tc2dzIiwKICAgICAgICAgICAgIm1heF9ieXRlcyIsCiAgICAgICAgICAgICJtYXhfYWdlIiwKICAgICAgICAgICAgInN0b3JhZ2UiLAogICAgICAgICAgICAibnVtX3JlcGxpY2FzIgogICAgICAgICAgXSwKICAgICAgICAgICJhZGRpdGlvbmFsUHJvcGVydGllcyI6IGZhbHNlLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJuYW1lIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJBIHVuaXF1ZSBuYW1lIGZvciB0aGUgU3RyZWFtLCBlbXB0eSBmb3IgU3RyZWFtIFRlbXBsYXRlcy4iLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgInBhdHRlcm4iOiAiXlteLio+XSokIiwKICAgICAgICAgICAgICAibWluTGVuZ3RoIjogMAogICAgICAgICAgICB9LAogICAgICAgICAgICAic3ViamVjdHMiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgbGlzdCBvZiBzdWJqZWN0cyB0byBjb25zdW1lLCBzdXBwb3J0cyB3aWxkY2FyZHMuIiwKICAgICAgICAgICAgICAidHlwZSI6ICJhcnJheSIsCiAgICAgICAgICAgICAgIm1pbkxlbmd0aCI6IDEsCiAgICAgICAgICAgICAgIml0ZW1zIjogewogICAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAgICJtaW5MZW5ndGgiOiAxCiAgICAgICAgICAgICAgfQogICAgICAgICAgICB9LAogICAgICAgICAgICAicmV0ZW50aW9uIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWVzc2FnZXMgYXJlIHJldGFpbmVkIGluIHRoZSBTdHJlYW0sIG9uY2UgdGhpcyBpcyBleGNlZWRlZCBvbGQgbWVzc2FnZXMgYXJlIHJlbW92ZWQuIiwKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgImxpbWl0cyIsCiAgICAgICAgICAgICAgICAiaW50ZXJlc3QiLAogICAgICAgICAgICAgICAgIndvcmtxdWV1ZSIKICAgICAgICAgICAgICBdLAogICAgICAgICAgICAgICJkZWZhdWx0IjogImxpbWl0cyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIm1heF9jb25zdW1lcnMiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhvdyBtYW55IENvbnN1bWVycyBjYW4gYmUgZGVmaW5lZCBmb3IgYSBnaXZlbiBTdHJlYW0uIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAibWluaW11bSI6IC0xLAogICAgICAgICAgICAgICJkZWZhdWx0IjogLTEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgIm1heF9tc2dzIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSBtZXNzYWdlcyBtYXkgYmUgaW4gYSBTdHJlYW0sIG9sZGVzdCBtZXNzYWdlcyB3aWxsIGJlIHJlbW92ZWQgaWYgdGhlIFN0cmVhbSBleGNlZWRzIHRoaXMgc2l6ZS4gLTEgZm9yIHVubGltaXRlZC4iLAogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJtaW5pbXVtIjogLTEsCiAgICAgICAgICAgICAgImRlZmF1bHQiOiAtMQogICAgICAgICAgICB9LAogICAgICAgICAgICAibWF4X2J5dGVzIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgYmlnIHRoZSBTdHJlYW0gbWF5IGJlLCB3aGVuIHRoZSBjb21iaW5lZCBzdHJlYW0gc2l6ZSBleGNlZWRzIHRoaXMgb2xkIG1lc3NhZ2VzIGFyZSByZW1vdmVkLiAtMSBmb3IgdW5saW1pdGVkLiIsCiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAtMSwKICAgICAgICAgICAgICAiZGVmYXVsdCI6IC0xCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJtYXhfYWdlIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJNYXhpbXVtIGFnZSBvZiBhbnkgbWVzc2FnZSBpbiB0aGUgc3RyZWFtLCBleHByZXNzZWQgaW4gbWljcm9zZWNvbmRzLiAwIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDAsCiAgICAgICAgICAgICAgImRlZmF1bHQiOiAwCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJtYXhfbXNnX3NpemUiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBsYXJnZXN0IG1lc3NhZ2UgdGhhdCB3aWxsIGJlIGFjY2VwdGVkIGJ5IHRoZSBTdHJlYW0uIC0xIGZvciB1bmxpbWl0ZWQuIiwKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAibWluaW11bSI6IC0xLAogICAgICAgICAgICAgICJkZWZhdWx0IjogLTEKICAgICAgICAgICAgfSwKICAgICAgICAgICAgInN0b3JhZ2UiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBzdG9yYWdlIGJhY2tlbmQgdG8gdXNlIGZvciB0aGUgU3RyZWFtLiIsCiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZW51bSI6IFsKICAgICAgICAgICAgICAgICJmaWxlIiwKICAgICAgICAgICAgICAgICJtZW1vcnkiCiAgICAgICAgICAgICAgXSwKICAgICAgICAgICAgICAiZGVmYXVsdCI6ICJmaWxlIgogICAgICAgICAgICB9LAogICAgICAgICAgICAibnVtX3JlcGxpY2FzIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIb3cgbWFueSByZXBsaWNhcyB0byBrZWVwIGZvciBlYWNoIG1lc3NhZ2UuIiwKICAgICAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDEsCiAgICAgICAgICAgICAgImRlZmF1bHQiOiAxLAogICAgICAgICAgICAgICJtYXhpbXVtIjogNQogICAgICAgICAgICB9LAogICAgICAgICAgICAibm9fYWNrIjogewogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJEaXNhYmxlcyBhY2tub3dsZWRnaW5nIG1lc3NhZ2VzIHRoYXQgYXJlIHJlY2VpdmVkIGJ5IHRoZSBTdHJlYW0uIiwKICAgICAgICAgICAgICAidHlwZSI6ICJib29sZWFuIiwKICAgICAgICAgICAgICAiZGVmYXVsdCI6IGZhbHNlCiAgICAgICAgICAgIH0sCiAgICAgICAgICAgICJ0ZW1wbGF0ZV9vd25lciI6IHsKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiV2hlbiB0aGUgU3RyZWFtIGlzIG1hbmFnZWQgYnkgYSBTdHJlYW0gVGVtcGxhdGUgdGhpcyBpZGVudGlmaWVzIHRoZSB0ZW1wbGF0ZSB0aGF0IG1hbmFnZXMgdGhlIFN0cmVhbS4iLAogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRpc2NhcmQiOiB7CiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIldoZW4gYSBTdHJlYW0gcmVhY2ggaXQncyBsaW1pdHMgZWl0aGVyIG9sZCBtZXNzYWdlcyBhcmUgZGVsZXRlZCBvciBuZXcgb25lcyBhcmUgZGVuaWVkIiwKICAgICAgICAgICAgICAidHlwZSI6ICJzdHJpbmciLAogICAgICAgICAgICAgICJlbnVtIjogWwogICAgICAgICAgICAgICAgIm9sZCIsCiAgICAgICAgICAgICAgICAibmV3IgogICAgICAgICAgICAgIF0sCiAgICAgICAgICAgICAgImRlZmF1bHQiOiAib2xkIgogICAgICAgICAgICB9LAogICAgICAgICAgICAiZHVwbGljYXRlX3dpbmRvdyI6IHsKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIHRpbWUgd2luZG93IHRvIHRyYWNrIGR1cGxpY2F0ZSBtZXNzYWdlcyBmb3IsIGV4cHJlc3NlZCBpbiBtaWNyb3NlY29uZHMuIDAgZm9yIGRlZmF1bHQiLAogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJtaW5pbXVtIjogMCwKICAgICAgICAgICAgICAiZGVmYXVsdCI6IDAKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sCiAgICAgICAgIm1heF9zdHJlYW1zIjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiVGhlIG1heGltdW0gbnVtYmVyIG9mIHN0cmVhbXMgdG8gYWxsb3cgdXNpbmcgdGhpcyBUZW1wbGF0ZSIsCiAgICAgICAgICAibWluaW11bSI6IC0xCiAgICAgICAgfQogICAgICB9CiAgICB9CiAgXQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_template_create_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_template_delete_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9kZWxldGVfcmVzcG9uc2UuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVzcG9uc2UgZnJvbSB0aGUgSmV0U3RyZWFtICRKUy5BUEkuU1RSRUFNLlRFTVBMQVRFLkRFTEVURSBBUEkiLAogICJ0aXRsZSI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX3RlbXBsYXRlX2RlbGV0ZV9yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJvbmVPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJlcnJvciIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImVycm9yIjogewogICAgICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAgICAgImNvZGUiCiAgICAgICAgICBdLAogICAgICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgICAgICJjb2RlIjogewogICAgICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgICAgICJkZXNjcmlwdGlvbiI6ICJIVFRQIGxpa2UgZXJyb3IgY29kZSBpbiB0aGUgMzAwIHRvIDUwMCByYW5nZSIsCiAgICAgICAgICAgICAgIm1pbmltdW0iOiAzMDAsCiAgICAgICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICAgICAgfSwKICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogewogICAgICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkEgaHVtYW4gZnJpZW5kbHkgZGVzY3JpcHRpb24gb2YgdGhlIGVycm9yIgogICAgICAgICAgICB9CiAgICAgICAgICB9CiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgewogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgInN1Y2Nlc3MiCiAgICAgIF0sCiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJwcm9wZXJ0aWVzIjogewogICAgICAgICJzdWNjZXNzIjogewogICAgICAgICAgInR5cGUiOiAiYm9vbGVhbiIKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdLAogICJwcm9wZXJ0aWVzIjogewogICAgInR5cGUiOiB7CiAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICJjb25zdCI6ICJpby5uYXRzLmpldHN0cmVhbS5hcGkudjEuc3RyZWFtX3RlbXBsYXRlX2RlbGV0ZV9yZXNwb25zZSIKICAgIH0KICB9Cn0K")
	schemas["io.nats.jetstream.api.v1.stream_template_info_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.stream_template_names_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9uYW1lc19yZXNwb25zZS5qc29uIiwKICAiZGVzY3JpcHRpb24iOiAiQSByZXNwb25zZSBmcm9tIHRoZSBKZXRTdHJlYW0gJEpTLkFQSS5TVFJFQU0uVEVNUExBVEUuTkFNRVMgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV90ZW1wbGF0ZV9uYW1lc19yZXNwb25zZSIsCiAgInR5cGUiOiAib2JqZWN0IiwKICAicmVxdWlyZWQiOiBbCiAgICAidHlwZSIKICBdLAogICJhbGxPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJ0b3RhbCIsCiAgICAgICAgIm9mZnNldCIsCiAgICAgICAgImxpbWl0IgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAidG90YWwiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0sCiAgICAgICAgIm9mZnNldCI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgIm1pbmltdW0iOiAwCiAgICAgICAgfSwKICAgICAgICAibGltaXQiOiB7CiAgICAgICAgICAidHlwZSI6ICJpbnRlZ2VyIiwKICAgICAgICAgICJtaW5pbXVtIjogMAogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgIm9uZU9mIjogWwogICAgewogICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAicmVxdWlyZWQiOiBbCiAgICAgICAgImVycm9yIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiZXJyb3IiOiB7CiAgICAgICAgICAidHlwZSI6ICJvYmplY3QiLAogICAgICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICAgICAiY29kZSIKICAgICAgICAgIF0sCiAgICAgICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAgICAgImNvZGUiOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICAgICAibWluaW11bSI6IDMwMCwKICAgICAgICAgICAgICAibWF4aW11bSI6IDY5OQogICAgICAgICAgICB9LAogICAgICAgICAgICAiZGVzY3JpcHRpb24iOiB7CiAgICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgICAgIH0KICAgICAgICAgIH0KICAgICAgICB9CiAgICAgIH0KICAgIH0sCiAgICB7CiAgICAgICJ0eXBlIjogIm9iamVjdCIsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAic3RyZWFtcyIKICAgICAgXSwKICAgICAgInByb3BlcnRpZXMiOiB7CiAgICAgICAgImNvbnN1bWVycyI6IHsKICAgICAgICAgICJ0eXBlIjogImFycmF5IiwKICAgICAgICAgICJpdGVtcyI6IHsKICAgICAgICAgICAgInR5cGUiOiAic3RyaW5nIgogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfQogIF0sCiAgInByb3BlcnRpZXMiOiB7CiAgICAidHlwZSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImNvbnN0IjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5zdHJlYW1fdGVtcGxhdGVfbmFtZXNfcmVzcG9uc2UiCiAgICB9CiAgfQp9Cg==")
	schemas["io.nats.jetstream.api.v1.stream_template_names_request"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3N0cmVhbV90ZW1wbGF0ZV9uYW1lc19yZXF1ZXN0Lmpzb24iLAogICJkZXNjcmlwdGlvbiI6ICJBIHJlcXVlc3QgdG8gdGhlIEpldFN0cmVhbSAkSlMuQVBJLkNPTlNVTUVSLkxJU1QgQVBJIiwKICAidGl0bGUiOiAiaW8ubmF0cy5qZXRzdHJlYW0uYXBpLnYxLnN0cmVhbV90ZW1wbGF0ZV9uYW1lc19yZXF1ZXN0IiwKICAidHlwZSI6ICJvYmplY3QiLAogICJhbGxPZiI6IFsKICAgIHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgImFkZGl0aW9uYWxQcm9wZXJ0aWVzIjogZmFsc2UsCiAgICAgICJyZXF1aXJlZCI6IFsKICAgICAgICAib2Zmc2V0IgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAib2Zmc2V0IjogewogICAgICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICAgICAibWluaW11bSI6IDAKICAgICAgICB9CiAgICAgIH0KICAgIH0KICBdCn0K")
	schemas["io.nats.jetstream.api.v1.stream_update_response"], _ = base64.StdEncoding.DecodeString("")
	schemas["io.nats.jetstream.api.v1.pub_ack_response"], _ = base64.StdEncoding.DecodeString("ewogICIkc2NoZW1hIjogImh0dHA6Ly9qc29uLXNjaGVtYS5vcmcvZHJhZnQtMDcvc2NoZW1hIyIsCiAgIiRpZCI6ICJodHRwczovL25hdHMuaW8vc2NoZW1hcy9qZXRzdHJlYW0vYXBpL3YxL3B1Yl9hY2tfcmVzcG9uc2UuanNvbiIsCiAgImRlc2NyaXB0aW9uIjogIkEgcmVzcG9uc2UgcmVjZWl2ZWQgd2hlbiBwdWJsaXNoaW5nIGEgbWVzc2FnZSIsCiAgInRpdGxlIjogImlvLm5hdHMuamV0c3RyZWFtLmFwaS52MS5wdWJfYWNrX3Jlc3BvbnNlIiwKICAidHlwZSI6ICJvYmplY3QiLAogICJyZXF1aXJlZCI6IFsKICAgICJzdHJlYW0iCiAgXSwKICAiYWRkaXRpb25hbFByb3BlcnRpZXMiOiBmYWxzZSwKICAicHJvcGVydGllcyI6IHsKICAgICJlcnJvciI6IHsKICAgICAgInR5cGUiOiAib2JqZWN0IiwKICAgICAgInJlcXVpcmVkIjogWwogICAgICAgICJjb2RlIgogICAgICBdLAogICAgICAicHJvcGVydGllcyI6IHsKICAgICAgICAiY29kZSI6IHsKICAgICAgICAgICJ0eXBlIjogImludGVnZXIiLAogICAgICAgICAgImRlc2NyaXB0aW9uIjogIkhUVFAgbGlrZSBlcnJvciBjb2RlIGluIHRoZSAzMDAgdG8gNTAwIHJhbmdlIiwKICAgICAgICAgICJtaW5pbXVtIjogMzAwLAogICAgICAgICAgIm1heGltdW0iOiA2OTkKICAgICAgICB9LAogICAgICAgICJkZXNjcmlwdGlvbiI6IHsKICAgICAgICAgICJ0eXBlIjogInN0cmluZyIsCiAgICAgICAgICAiZGVzY3JpcHRpb24iOiAiQSBodW1hbiBmcmllbmRseSBkZXNjcmlwdGlvbiBvZiB0aGUgZXJyb3IiCiAgICAgICAgfQogICAgICB9CiAgICB9LAogICAgInN0cmVhbSI6IHsKICAgICAgInR5cGUiOiAic3RyaW5nIiwKICAgICAgImRlc2NyaXB0aW9uIjogIlRoZSBuYW1lIG9mIHRoZSBzdHJlYW0gdGhhdCByZWNlaXZlZCB0aGUgbWVzc2FnZSIsCiAgICAgICJtaW5MZW5ndGgiOiAxCiAgICB9LAogICAgInNlcSI6IHsKICAgICAgInR5cGUiOiAiaW50ZWdlciIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJJZiBzdWNjZXNzZnVsIHRoaXMgd2lsbCBiZSB0aGUgc2VxdWVuY2UgdGhlIG1lc3NhZ2UgaXMgc3RvcmVkIGF0IiwKICAgICAgIm1pbmltdW0iOiAwLAogICAgICAibWF4aW11bSI6IDE4NDQ2NzQ0MDczNzA5NTUyMDAwCiAgICB9LAogICAgImR1cGxpY2F0ZSI6IHsKICAgICAgInR5cGUiOiAiYm9vbGVhbiIsCiAgICAgICJkZXNjcmlwdGlvbiI6ICJJbmRpY2F0ZXMgdGhhdCB0aGUgbWVzc2FnZSB3YXMgbm90IHN0b3JlZCBkdWUgdG8gdGhlIE5hdHMtTXNnLUlkIGhlYWRlciBhbmQgZHVwbGljYXRlIHRyYWNraW5nIiwKICAgICAgImRlZmF1bHQiOiBmYWxzZQogICAgfQogIH0KfQo=")
}
